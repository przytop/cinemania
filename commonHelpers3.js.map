{"version":3,"file":"commonHelpers3.js","sources":["../src/js/library.js"],"sourcesContent":["import TmdbApi from './tmdb-api';\nimport openMovieInfoModal from './modal-window';\n\nconst movieList = document.querySelector('.my-library-movie-list');\nconst sorry = document.querySelector('.my-library-sorry');\nconst loadMoreButton = document.querySelector('.my-library-main-section .my-library-button');\nconst mainSection = document.querySelector('.my-library-main-section');\nconst genreSelect = document.querySelector('#genre');\n\n// Variables to track state\nlet currentDisplayCount = 0;\nconst batchSize = 9;\nconst genreMap = new Map();\n\nasync function fetchGenres() {\n  try {\n    const tmdb = new TmdbApi();\n    const genres = await tmdb.getMovieGenres(); // Returns an array of genre objects from db\n\n    genres.forEach(genre => {\n      if (genre.id && genre.name) {\n        genreMap.set(genre.id, genre.name);\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching genres:', error);\n  }\n}\n\nfunction createMovieListItem(movie) {\n  const listItem = document.createElement('li');\n  listItem.classList.add('my-library-movie-list-item');\n\n  const genreNames = (movie.genre_ids || [])\n    .map(id => genreMap.get(id) || 'Unknown')\n    .join(', ');\n\n  const id = movie.id;\n  const releaseYear = new Date(movie.release_date).getFullYear();\n  listItem.dataset.id = id;\n\n  const imageUrl = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n  listItem.style.backgroundImage = `url(${imageUrl})`;\n  listItem.style.backgroundSize = 'cover';\n  listItem.style.backgroundPosition = 'center';\n  listItem.innerHTML = `\n    <div class=\"my-library-gradient\"></div>\n    <div class=\"my-library-movie\">\n      <span class=\"my-library-movie-title\">${movie.title}</span>\n      <span class=\"my-library-movie-genres\">${genreNames} | ${releaseYear}</span>\n    </div>\n  `;\n\n  return listItem;\n}\n\nfunction renderMovieList(genre = '', reset = true) {\n  const movies = JSON.parse(localStorage.getItem('myLibrary')) || [];\n\n  // Reset display count if necessary\n  if (reset) {\n    currentDisplayCount = 0;\n  }\n\n  const filteredMovies = genre\n    ? movies.filter(movie => {\n        const movieGenre = movie.genre_ids || [];\n        return movieGenre.some(id => genreMap.get(id).toLowerCase() === genre.toLowerCase());\n      })\n    : movies;\n\n  if (reset) {\n    movieList.innerHTML = '';\n  }\n\n  if (filteredMovies.length > 0) {\n    mainSection.style.display = 'block';\n    sorry.style.display = 'none';\n    document.querySelector('.genre-form').style.display = 'block';\n\n    const moviesToDisplay = filteredMovies.slice(\n      currentDisplayCount,\n      currentDisplayCount + batchSize\n    );\n    moviesToDisplay.forEach(movie => {\n      const listItem = createMovieListItem(movie);\n      movieList.appendChild(listItem);\n    });\n\n    currentDisplayCount += batchSize;\n\n    if (currentDisplayCount >= filteredMovies.length) {\n      loadMoreButton.style.display = 'none';\n    } else {\n      loadMoreButton.style.display = 'block';\n    }\n  } else {\n    sorry.style.display = 'block';\n    mainSection.style.display = 'none';\n    document.querySelector('.genre-form').style.display = 'none';\n    loadMoreButton.style.display = 'none';\n  }\n\n  // Event for movie items\n  document.querySelectorAll('.my-library-movie-list-item').forEach(item => {\n    item.addEventListener('click', event => {\n      const listItem = event.currentTarget;\n      const id = listItem.dataset.id;\n      if (id) {\n        openMovieInfoModal(id);\n      }\n    });\n  });\n}\n\nloadMoreButton.addEventListener('click', function () {\n  renderMovieList(genreSelect.value, false);\n});\n\ngenreSelect.addEventListener('change', function () {\n  const selectedGenre = genreSelect.value;\n  renderMovieList(selectedGenre);\n});\n\nasync function render() {\n  await fetchGenres();\n  renderMovieList();\n}\n\nrender();\n"],"names":["movieList","sorry","loadMoreButton","mainSection","genreSelect","currentDisplayCount","batchSize","genreMap","fetchGenres","TmdbApi","genre","error","createMovieListItem","movie","listItem","genreNames","id","releaseYear","imageUrl","renderMovieList","reset","movies","filteredMovies","item","event","openMovieInfoModal","selectedGenre","render"],"mappings":"yFAGA,MAAMA,EAAY,SAAS,cAAc,wBAAwB,EAC3DC,EAAQ,SAAS,cAAc,mBAAmB,EAClDC,EAAiB,SAAS,cAAc,6CAA6C,EACrFC,EAAc,SAAS,cAAc,0BAA0B,EAC/DC,EAAc,SAAS,cAAc,QAAQ,EAGnD,IAAIC,EAAsB,EAC1B,MAAMC,EAAY,EACZC,EAAW,IAAI,IAErB,eAAeC,GAAc,CAC3B,GAAI,EAEa,MADF,IAAIC,IACS,kBAEnB,QAAQC,GAAS,CAClBA,EAAM,IAAMA,EAAM,MACpBH,EAAS,IAAIG,EAAM,GAAIA,EAAM,IAAI,CAEzC,CAAK,CACF,OAAQC,EAAO,CACd,QAAQ,MAAM,yBAA0BA,CAAK,CAC9C,CACH,CAEA,SAASC,EAAoBC,EAAO,CAClC,MAAMC,EAAW,SAAS,cAAc,IAAI,EAC5CA,EAAS,UAAU,IAAI,4BAA4B,EAEnD,MAAMC,GAAcF,EAAM,WAAa,CAAE,GACtC,IAAIG,GAAMT,EAAS,IAAIS,CAAE,GAAK,SAAS,EACvC,KAAK,IAAI,EAENA,EAAKH,EAAM,GACXI,EAAc,IAAI,KAAKJ,EAAM,YAAY,EAAE,cACjDC,EAAS,QAAQ,GAAKE,EAEtB,MAAME,EAAW,kCAAkCL,EAAM,WAAW,GACpE,OAAAC,EAAS,MAAM,gBAAkB,OAAOI,CAAQ,IAChDJ,EAAS,MAAM,eAAiB,QAChCA,EAAS,MAAM,mBAAqB,SACpCA,EAAS,UAAY;AAAA;AAAA;AAAA,6CAGsBD,EAAM,KAAK;AAAA,8CACVE,CAAU,MAAME,CAAW;AAAA;AAAA,IAIhEH,CACT,CAEA,SAASK,EAAgBT,EAAQ,GAAIU,EAAQ,GAAM,CACjD,MAAMC,EAAS,KAAK,MAAM,aAAa,QAAQ,WAAW,CAAC,GAAK,GAG5DD,IACFf,EAAsB,GAGxB,MAAMiB,EAAiBZ,EACnBW,EAAO,OAAOR,IACOA,EAAM,WAAa,IACpB,KAAKG,GAAMT,EAAS,IAAIS,CAAE,EAAE,YAAa,IAAKN,EAAM,YAAa,CAAA,CACpF,EACDW,EAEAD,IACFpB,EAAU,UAAY,IAGpBsB,EAAe,OAAS,GAC1BnB,EAAY,MAAM,QAAU,QAC5BF,EAAM,MAAM,QAAU,OACtB,SAAS,cAAc,aAAa,EAAE,MAAM,QAAU,QAE9BqB,EAAe,MACrCjB,EACAA,EAAsBC,CAC5B,EACoB,QAAQO,GAAS,CAC/B,MAAMC,EAAWF,EAAoBC,CAAK,EAC1Cb,EAAU,YAAYc,CAAQ,CACpC,CAAK,EAEDT,GAAuBC,EAEnBD,GAAuBiB,EAAe,OACxCpB,EAAe,MAAM,QAAU,OAE/BA,EAAe,MAAM,QAAU,UAGjCD,EAAM,MAAM,QAAU,QACtBE,EAAY,MAAM,QAAU,OAC5B,SAAS,cAAc,aAAa,EAAE,MAAM,QAAU,OACtDD,EAAe,MAAM,QAAU,QAIjC,SAAS,iBAAiB,6BAA6B,EAAE,QAAQqB,GAAQ,CACvEA,EAAK,iBAAiB,QAASC,GAAS,CAEtC,MAAMR,EADWQ,EAAM,cACH,QAAQ,GACxBR,GACFS,EAAmBT,CAAE,CAE7B,CAAK,CACL,CAAG,CACH,CAEAd,EAAe,iBAAiB,QAAS,UAAY,CACnDiB,EAAgBf,EAAY,MAAO,EAAK,CAC1C,CAAC,EAEDA,EAAY,iBAAiB,SAAU,UAAY,CACjD,MAAMsB,EAAgBtB,EAAY,MAClCe,EAAgBO,CAAa,CAC/B,CAAC,EAED,eAAeC,GAAS,CACtB,MAAMnB,EAAW,EACjBW,GACF,CAEAQ,EAAQ"}