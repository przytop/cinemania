{"version":3,"file":"commonHelpers2.js","sources":["../src/js/weekly-trends.js","../src/js/upcoming-this-month.js"],"sourcesContent":["import TmdbApi from './tmdb-api';\r\nimport openMovieInfoModal from './modal-window';\r\n\r\ndocument.addEventListener('DOMContentLoaded', async function () {\r\n  const movieCardsContainer = document.getElementById('weekly-cards');\r\n  const tmdb = new TmdbApi();\r\n\r\n  const genreAbbreviations = {\r\n    'Science Fiction': 'Sci-Fi',\r\n  };\r\n\r\n  const backdrop = document.querySelector('.backdrop');\r\n  // const modalWindow = backdrop.querySelector('.modal-window');\r\n  // const closeButton = modalWindow.querySelector('.modal-btn-close');\r\n\r\n  // function openModal() {\r\n  //   modalWindow.innerHTML = `\r\n  //     <button class=\"modal-btn-close\" type=\"button\">\r\n  //       <svg class=\"modal-btn-close-icon\" width=\"10.5\" height=\"10.5\" fill=\"#ffffff\">\r\n  //         <use href=\"\"></use>\r\n  //       </svg>\r\n  //     </button>\r\n\r\n  //     <img class=\"modal-film-poster\" src=\"https://via.placeholder.com/248x315\" alt=\"Film Poster\">\r\n\r\n  //     <div class=\"modal-film-infos\">\r\n  //         <h3 class=\"modal-film-title\">Sample Film Title</h3>\r\n  //         <table class=\"modal-film-stats\">\r\n  //             <tr class=\"modal-film-tab-row\">\r\n  //                 <th class=\"modal-film-tab-header\">Vote / Votes</th>\r\n  //                 <td class=\"modal-film-tab-data\">\r\n  //                     <span class=\"modal-window-accent-vote\">8.5</span>\r\n  //                     /\r\n  //                     <span class=\"modal-window-accent-votes\">2000</span></td>\r\n  //             </tr>\r\n  //             <tr class=\"modal-film-tab-row\">\r\n  //                 <th class=\"modal-film-tab-header\">Popularity</th>\r\n  //                 <td class=\"modal-film-tab-data\">89.2</td>\r\n  //             </tr>\r\n  //             <tr class=\"modal-film-tab-row\">\r\n  //                 <th class=\"modal-film-tab-header\">Genre</th>\r\n  //                 <td class=\"modal-film-tab-data\">Action, Drama</td>\r\n  //             </tr>\r\n  //         </table>\r\n\r\n  //         <h3 class=\"modal-film-desc-about\">About</h3>\r\n  //         <p class=\"modal-film-desc\">Sample description  ~~ Lorem ipsum, dolor sit amet consectetur adipisicing elit. Quo commodi\r\n  //               iure eius repellendus perspiciatis. Ducimus sit temporibus provident architecto! Adipisci labore\r\n  //               accusantium maiores, laborum voluptates odit illum odio nam id. Lorem ipsum dolor sit amet consectetur\r\n  //               adipisicing elit. Rem fugiat ea, eos provident, illo veritatis quos id laborum a, enim ullam. Provident\r\n  //               atque id quam, aspernatur nemo necessitatibus saepe consequatur. Lorem ipsum dolor sit amet consectetur\r\n  //               adipisicing elit. Consequuntur asperiores cumque, debitis atque ab maiores beatae voluptatum aperiam\r\n  //               error nulla? Nostrum aperiam magni aut magnam ipsam maiores quaerat placeat omnis</p>\r\n  //         <button id=\"library-actions-btn\" type=\"submit\">Add to my library</button>\r\n  //     </div>\r\n  //   `;\r\n  //   // backdrop.classList.remove('is-closed');\r\n  //   // backdrop.classList.add('is-visible');\r\n  // }\r\n\r\n  function closeModal() {\r\n    backdrop.classList.remove('is-visible');\r\n    backdrop.classList.add('is-closed');\r\n  }\r\n\r\n  // closeButton.addEventListener('click', closeModal);\r\n\r\n  backdrop.addEventListener('click', event => {\r\n    if (event.target === backdrop) {\r\n      closeModal();\r\n    }\r\n  });\r\n\r\n  try {\r\n    const movies = await tmdb.getTrendingMovies('week');\r\n\r\n    function displayGenres() {\r\n      const screenWidth = window.innerWidth;\r\n      let genresToShow = 2;\r\n\r\n      if (screenWidth <= 600) {\r\n        genresToShow = 1;\r\n      }\r\n\r\n      movieCardsContainer.innerHTML = '';\r\n\r\n      movies.slice(0, 3).forEach(async movie => {\r\n        const card = document.createElement('div');\r\n        card.classList.add('card');\r\n\r\n        const id = movie.id;\r\n\r\n\r\n        const imageUrl = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\r\n        const title = movie.title;\r\n        const releaseDate = movie.release_date\r\n          ? new Date(movie.release_date).getFullYear()\r\n          : 'Unknown';\r\n        const rating = Math.round(movie.vote_average * 10) / 10;\r\n\r\n        const genresList = await tmdb.getMovieGenres();\r\n        const genreNames = movie.genre_ids\r\n          .slice(0, genresToShow)\r\n          .map(id => {\r\n            const genre = genresList.find(g => g.id === id);\r\n            const genreName = genre ? genre.name : 'Unknown';\r\n            return genreAbbreviations[genreName] || genreName;\r\n          })\r\n          .join(', ');\r\n\r\n        const maxStars = 5;\r\n        const fullStars = Math.floor(rating / 2);\r\n        const halfStar = rating % 2 >= 1 ? 1 : 0;\r\n        const emptyStars = maxStars - fullStars - halfStar;\r\n\r\n        const stars = [\r\n          ...Array(fullStars).fill(\r\n            '<svg class=\"star full\"><use xlink:href=\"#icon-star\"></use></svg>'\r\n          ),\r\n          ...Array(halfStar).fill(\r\n            '<svg class=\"star half\"><use xlink:href=\"#icon-star-half\"></use></svg>'\r\n          ),\r\n          ...Array(emptyStars).fill(\r\n            '<svg class=\"star empty\"><use xlink:href=\"#icon-star-outline\"></use></svg>'\r\n          ),\r\n        ].join('');\r\n\r\n        card.style.backgroundImage = `url(${imageUrl})`;\r\n        card.style.backgroundSize = 'cover';\r\n        card.style.backgroundPosition = 'center';\r\n\r\n        card.dataset.id = id;\r\n        \r\n        card.innerHTML = `\r\n          <div class=\"card-content\">\r\n            <h2>${title}</h2>\r\n            <p>${genreNames} | ${releaseDate} <span class=\"stars\">${stars}</span></p>\r\n          </div>\r\n        `;\r\n\r\n      document.querySelectorAll('.card').forEach(card => {\r\n          card.addEventListener('click', event => {\r\n            const id = event.target.getAttribute('data-id');\r\n            if (id) {\r\n              // Ensure the id is present\r\n              openMovieInfoModal(id);\r\n            }\r\n          });\r\n        });\r\n\r\n        movieCardsContainer.appendChild(card);\r\n      });\r\n    }\r\n\r\n    displayGenres();\r\n\r\n    window.addEventListener('resize', displayGenres);\r\n  } catch (error) {\r\n    console.error('Error fetching data:', error);\r\n  }\r\n});\r\n","import TmdbApi from './tmdb-api.js';\nimport Library from './local-movie-manager.js';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nconst tmdb = new TmdbApi();\nconst library = new Library('myLibrary');\n\nasync function getUpcomingMovies() {\n  try {\n    const movies = await tmdb.getUpcomingMovies();\n    const today = new Date();\n    const thisMonthMovies = movies.filter(movie => {\n      const releaseDate = new Date(movie.release_date);\n      return (\n        releaseDate.getFullYear() === today.getFullYear() &&\n        releaseDate.getMonth() === today.getMonth()\n      );\n    });\n\n    if (thisMonthMovies.length === 0) {\n      displayMessage('No upcoming movies this month.');\n    } else {\n      const randomMovie =\n        thisMonthMovies[Math.floor(Math.random() * thisMonthMovies.length)];\n      displayMovie(randomMovie);\n    }\n  } catch (error) {\n    console.error('Failed to fetch upcoming movies:', error);\n    displayMessage('Failed to fetch upcoming movies. Please try again later');\n  }\n}\n\nfunction displayMessage(message) {\n  iziToast.info({\n    title: 'Info',\n    message: message,\n  });\n}\n\nfunction displayMovie(movie) {\n  const movieContainer = document.getElementById('movie-container');\n  const imageUrl = `https://image.tmdb.org/t/p/original/${movie.backdrop_path}`;\n  const releaseDate = new Date(movie.release_date).toLocaleDateString();\n  const genres = movie.genre_ids.map(id => genreMap[id]).join(', ');\n  const popularity = movie.popularity.toFixed(1);\n\n  const html = `\n    <div class=\"upcoming-container\">\n      <div class=\"upcoming-img\">\n        <img class=\"upcoming-img\" src=\"${imageUrl}\" alt=\"${movie.title}\">\n      </div>\n      <div class=\"movie-details\">\n        <h2 class=\"movie-title\">${movie.title}</h2>\n          <div class=\"info-item\">\n            <div class=\"\">\n            <p class=\"detail-item\">Release date:<span class=\"relase-date\">${releaseDate}</span></p>\n            <p class=\"detail-item\">Vote / Votes:<span class=\"vote-count\">${movie.vote_average} / ${movie.vote_count}</span></p>\n            </div>\n            <div  class=\"\">\n            <p class=\"detail-item\">Popularity:<span class=\"popularity-value\">${popularity}</span></p>\n            <div class=\"genre-p\"><p class=\"genre-item\">Genre:<div class=\"genre-div\"><span class=\"genre\">${genres}</span></div></p>\n            </div></div>\n          </div>\n        <p class=\"about\">ABOUT</p>\n        <p class=\"overview\">${movie.overview}</p>\n        <button id=\"library-btn\" data-id=\"${movie.id}\">Add to my library</button>\n      </div>\n    </div>\n  `;\n\n  movieContainer.innerHTML = html;\n\n  const libraryBtn = document.getElementById('library-btn');\n  libraryBtn.addEventListener('click', () => toggleLibrary(movie));\n  updateLibraryButton(movie.id);\n}\n\nfunction toggleLibrary(movie) {\n  const movieId = movie.id;\n  const isInLibrary = library.getMovies().some(m => m.id === movieId);\n\n  if (isInLibrary) {\n    library.removeMovie(movieId);\n    iziToast.info({\n      title: 'Info',\n      message: 'Removed from my library',\n      backgroundColor: 'red',\n      messageSize: '13',\n      closeOnEscape: 'true',\n      closeOnClick: 'true',\n    });\n  } else {\n    library.addMovie(movie);\n    iziToast.success({\n      title: 'Success',\n      message: 'Added to my library',\n      backgroundColor: 'orange',\n      messageSize: '13',\n      closeOnEscape: 'true',\n      closeOnClick: 'true',\n    });\n  }\n\n  updateLibraryButton(movieId);\n}\n\nfunction updateLibraryButton(movieId) {\n  const isInLibrary = library.getMovies().some(m => m.id === movieId);\n  const libraryBtn = document.getElementById('library-btn');\n\n  if (isInLibrary) {\n    libraryBtn.textContent = 'Remove from my library';\n  } else {\n    libraryBtn.textContent = 'Add to my library';\n  }\n}\n\nconst genreMap = {};\ntmdb.getMovieGenres().then(genres => {\n  genres.forEach(genre => {\n    genreMap[genre.id] = genre.name;\n  });\n\n  getUpcomingMovies();\n});\n"],"names":["movieCardsContainer","tmdb","TmdbApi","genreAbbreviations","backdrop","closeModal","event","displayGenres","screenWidth","genresToShow","movies","movie","card","id","imageUrl","title","releaseDate","rating","genresList","genreNames","genre","g","genreName","maxStars","fullStars","halfStar","emptyStars","stars","openMovieInfoModal","error","library","Library","getUpcomingMovies","today","thisMonthMovies","displayMessage","randomMovie","displayMovie","message","iziToast","movieContainer","genres","genreMap","popularity","html","toggleLibrary","updateLibraryButton","movieId","m","isInLibrary","libraryBtn"],"mappings":"4GAGA,SAAS,iBAAiB,mBAAoB,gBAAkB,CAC9D,MAAMA,EAAsB,SAAS,eAAe,cAAc,EAC5DC,EAAO,IAAIC,EAEXC,EAAqB,CACzB,kBAAmB,QACvB,EAEQC,EAAW,SAAS,cAAc,WAAW,EAiDnD,SAASC,GAAa,CACpBD,EAAS,UAAU,OAAO,YAAY,EACtCA,EAAS,UAAU,IAAI,WAAW,CACnC,CAIDA,EAAS,iBAAiB,QAASE,GAAS,CACtCA,EAAM,SAAWF,GACnBC,GAEN,CAAG,EAED,GAAI,CAGF,IAASE,EAAT,UAAyB,CACvB,MAAMC,EAAc,OAAO,WAC3B,IAAIC,EAAe,EAEfD,GAAe,MACjBC,EAAe,GAGjBT,EAAoB,UAAY,GAEhCU,EAAO,MAAM,EAAG,CAAC,EAAE,QAAQ,MAAMC,GAAS,CACxC,MAAMC,EAAO,SAAS,cAAc,KAAK,EACzCA,EAAK,UAAU,IAAI,MAAM,EAEzB,MAAMC,EAAKF,EAAM,GAGXG,EAAW,kCAAkCH,EAAM,WAAW,GAC9DI,EAAQJ,EAAM,MACdK,EAAcL,EAAM,aACtB,IAAI,KAAKA,EAAM,YAAY,EAAE,YAAa,EAC1C,UACEM,EAAS,KAAK,MAAMN,EAAM,aAAe,EAAE,EAAI,GAE/CO,EAAa,MAAMjB,EAAK,iBACxBkB,EAAaR,EAAM,UACtB,MAAM,EAAGF,CAAY,EACrB,IAAII,GAAM,CACT,MAAMO,EAAQF,EAAW,KAAKG,GAAKA,EAAE,KAAOR,CAAE,EACxCS,EAAYF,EAAQA,EAAM,KAAO,UACvC,OAAOjB,EAAmBmB,CAAS,GAAKA,CACpD,CAAW,EACA,KAAK,IAAI,EAENC,EAAW,EACXC,EAAY,KAAK,MAAMP,EAAS,CAAC,EACjCQ,EAAWR,EAAS,GAAK,EAAI,EAAI,EACjCS,EAAaH,EAAWC,EAAYC,EAEpCE,EAAQ,CACZ,GAAG,MAAMH,CAAS,EAAE,KAClB,kEACD,EACD,GAAG,MAAMC,CAAQ,EAAE,KACjB,uEACD,EACD,GAAG,MAAMC,CAAU,EAAE,KACnB,2EACD,CACX,EAAU,KAAK,EAAE,EAETd,EAAK,MAAM,gBAAkB,OAAOE,CAAQ,IAC5CF,EAAK,MAAM,eAAiB,QAC5BA,EAAK,MAAM,mBAAqB,SAEhCA,EAAK,QAAQ,GAAKC,EAElBD,EAAK,UAAY;AAAA;AAAA,kBAEPG,CAAK;AAAA,iBACNI,CAAU,MAAMH,CAAW,wBAAwBW,CAAK;AAAA;AAAA,UAInE,SAAS,iBAAiB,OAAO,EAAE,QAAQf,GAAQ,CAC/CA,EAAK,iBAAiB,QAASN,GAAS,CACtC,MAAMO,EAAKP,EAAM,OAAO,aAAa,SAAS,EAC1CO,GAEFe,EAAmBf,CAAE,CAEnC,CAAW,CACX,CAAS,EAEDb,EAAoB,YAAYY,CAAI,CAC5C,CAAO,CACF,EA9ED,MAAMF,EAAS,MAAMT,EAAK,kBAAkB,MAAM,EAgFlDM,IAEA,OAAO,iBAAiB,SAAUA,CAAa,CAChD,OAAQsB,EAAO,CACd,QAAQ,MAAM,uBAAwBA,CAAK,CAC5C,CACH,CAAC,EC5JD,MAAM5B,EAAO,IAAIC,EACX4B,EAAU,IAAIC,EAAQ,WAAW,EAEvC,eAAeC,GAAoB,CACjC,GAAI,CACF,MAAMtB,EAAS,MAAMT,EAAK,oBACpBgC,EAAQ,IAAI,KACZC,EAAkBxB,EAAO,OAAOC,GAAS,CAC7C,MAAMK,EAAc,IAAI,KAAKL,EAAM,YAAY,EAC/C,OACEK,EAAY,YAAW,IAAOiB,EAAM,YAAa,GACjDjB,EAAY,SAAQ,IAAOiB,EAAM,SAAU,CAEnD,CAAK,EAED,GAAIC,EAAgB,SAAW,EAC7BC,EAAe,gCAAgC,MAC1C,CACL,MAAMC,EACJF,EAAgB,KAAK,MAAM,KAAK,OAAM,EAAKA,EAAgB,MAAM,CAAC,EACpEG,EAAaD,CAAW,CACzB,CACF,OAAQP,EAAO,CACd,QAAQ,MAAM,mCAAoCA,CAAK,EACvDM,EAAe,yDAAyD,CACzE,CACH,CAEA,SAASA,EAAeG,EAAS,CAC/BC,EAAS,KAAK,CACZ,MAAO,OACP,QAASD,CACb,CAAG,CACH,CAEA,SAASD,EAAa1B,EAAO,CAC3B,MAAM6B,EAAiB,SAAS,eAAe,iBAAiB,EAC1D1B,EAAW,uCAAuCH,EAAM,aAAa,GACrEK,EAAc,IAAI,KAAKL,EAAM,YAAY,EAAE,qBAC3C8B,EAAS9B,EAAM,UAAU,IAAIE,GAAM6B,EAAS7B,CAAE,CAAC,EAAE,KAAK,IAAI,EAC1D8B,EAAahC,EAAM,WAAW,QAAQ,CAAC,EAEvCiC,EAAO;AAAA;AAAA;AAAA,yCAG0B9B,CAAQ,UAAUH,EAAM,KAAK;AAAA;AAAA;AAAA,kCAGpCA,EAAM,KAAK;AAAA;AAAA;AAAA,4EAG+BK,CAAW;AAAA,2EACZL,EAAM,YAAY,MAAMA,EAAM,UAAU;AAAA;AAAA;AAAA,+EAGpCgC,CAAU;AAAA,0GACiBF,CAAM;AAAA;AAAA;AAAA;AAAA,8BAIlF9B,EAAM,QAAQ;AAAA,4CACAA,EAAM,EAAE;AAAA;AAAA;AAAA,IAKlD6B,EAAe,UAAYI,EAER,SAAS,eAAe,aAAa,EAC7C,iBAAiB,QAAS,IAAMC,EAAclC,CAAK,CAAC,EAC/DmC,EAAoBnC,EAAM,EAAE,CAC9B,CAEA,SAASkC,EAAclC,EAAO,CAC5B,MAAMoC,EAAUpC,EAAM,GACFmB,EAAQ,YAAY,KAAKkB,GAAKA,EAAE,KAAOD,CAAO,GAGhEjB,EAAQ,YAAYiB,CAAO,EAC3BR,EAAS,KAAK,CACZ,MAAO,OACP,QAAS,0BACT,gBAAiB,MACjB,YAAa,KACb,cAAe,OACf,aAAc,MACpB,CAAK,IAEDT,EAAQ,SAASnB,CAAK,EACtB4B,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,sBACT,gBAAiB,SACjB,YAAa,KACb,cAAe,OACf,aAAc,MACpB,CAAK,GAGHO,EAAoBC,CAAO,CAC7B,CAEA,SAASD,EAAoBC,EAAS,CACpC,MAAME,EAAcnB,EAAQ,YAAY,KAAKkB,GAAKA,EAAE,KAAOD,CAAO,EAC5DG,EAAa,SAAS,eAAe,aAAa,EAEpDD,EACFC,EAAW,YAAc,yBAEzBA,EAAW,YAAc,mBAE7B,CAEA,MAAMR,EAAW,CAAA,EACjBzC,EAAK,eAAc,EAAG,KAAKwC,GAAU,CACnCA,EAAO,QAAQrB,GAAS,CACtBsB,EAAStB,EAAM,EAAE,EAAIA,EAAM,IAC/B,CAAG,EAEDY,GACF,CAAC"}