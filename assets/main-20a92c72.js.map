{"version":3,"file":"main-20a92c72.js","sources":["../../src/js/switch-theme.js","../../src/js/tmdb-api.js","../../src/js/weekly-trends.js","../../src/js/scroll-to-top.js","../../src/js/local-movie-manager.js","../../src/js/modal-window.js","../../src/js/footer.js","../../src/js/hero.js","../../src/js/upcoming-this-month.js","../../src/js/catalog.js","../../src/js/header.js"],"sourcesContent":["const switcher = document.querySelector('.theme-switcher');\nconst root = document.documentElement;\n\nfunction switchTheme() {\n  const newTheme = root.getAttribute('data-theme') === 'dark' ? 'light' : 'dark';\n  root.setAttribute('data-theme', newTheme);\n  localStorage.setItem('theme', newTheme);  // Save the user's preference\n}\n\nswitcher.addEventListener('click', switchTheme);\n","'use strict';\n\nimport axios from 'axios';\n\nexport default class TmdbApi {\n  constructor() {\n    this.axios = axios.create({\n      baseURL: 'https://api.themoviedb.org/3',\n      headers: {\n        accept: 'application/json',\n        Authorization: `Bearer ${import.meta.env.VITE_API_KEY}`, // VITE_API_KEY must be set correctly in environment variables\n        Authorization: `Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxOWZhNTk0Y2Q2ZWRlZDUxZGFlZTA0ODU0NjY1MjdkYiIsIm5iZiI6MTcyMjAzNzc3Mi41NzIxMDMsInN1YiI6IjY2YTE3MjQ1ZTE1OTc2ZWJmYWI4YmYzZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.G9xrsM-y8LQuvYrOh8SZI1olRXGF_yNK39ZipUP4QbY`, // For Testing\n      },\n    });\n  }\n\n  async _fetch(endpoint, params = {}) {\n    try {\n      const response = await this.axios.get(endpoint, { params });\n      return response.data;\n    } catch (error) {\n      console.error(`Failed to fetch ${endpoint}: ${error.message}`);\n      throw error;\n    }\n  }\n\n  async getTrendingMovies(time_window) {\n    if (!['day', 'week'].includes(time_window)) {\n      throw new Error(\"Invalid time_window. Must be 'day' or 'week'\");\n    }\n    return (await this._fetch(`/trending/movie/${time_window}`)).results;\n  }\n\n  async getUpcomingMovies() {\n    return (await this._fetch(`/movie/upcoming`)).results;\n  }\n\n  async searchMovie(query, page = 1) {\n    return (await this._fetch('/search/movie', { query, page })).results;\n  }\n\n  async getMovieDetails(movie_id) {\n    return await this._fetch(`/movie/${movie_id}`);\n  }\n\n  async getMovieVideos(movie_id) {\n    return (await this._fetch(`/movie/${movie_id}/videos`)).results;\n  }\n\n  async getMovieGenres() {\n    return (await this._fetch('/genre/movie/list')).genres;\n  }\n\n  async getCountriesList() {\n    return await this._fetch('/configuration/countries');\n  }\n}\n\n// Testing\nconst tmdb = new TmdbApi();\nconst test = async () => {\n  try {\n    console.log(await tmdb.getTrendingMovies('day'));\n    console.log(await tmdb.getTrendingMovies('week'));\n    console.log(await tmdb.getUpcomingMovies());\n    console.log(await tmdb.searchMovie('Dune'));\n    console.log(await tmdb.getMovieDetails(438631));\n    console.log(await tmdb.getMovieVideos(438631));\n    console.log(await tmdb.getMovieGenres());\n    console.log(await tmdb.getCountriesList());\n  } catch (error) {\n    console.error('Test failed:', error);\n  }\n};\n\n// test();\n","import TmdbApi from './tmdb-api';\r\n\r\ndocument.addEventListener('DOMContentLoaded', async function () {\r\n  const movieCardsContainer = document.getElementById('weekly-cards');\r\n  const tmdb = new TmdbApi();\r\n\r\n  const genreAbbreviations = {\r\n    'Science Fiction': 'Sci-Fi',\r\n  };\r\n\r\n  const backdrop = document.querySelector('.backdrop');\r\n  const modalWindow = backdrop.querySelector('.modal-window');\r\n  // const closeButton = modalWindow.querySelector('.modal-btn-close');\r\n\r\n  function openModal() {\r\n    modalWindow.innerHTML = `\r\n      <button class=\"modal-btn-close\" type=\"button\">\r\n        <svg class=\"modal-btn-close-icon\" width=\"10.5\" height=\"10.5\" fill=\"#ffffff\">\r\n          <use href=\"\"></use>\r\n        </svg>\r\n      </button>\r\n\r\n      <img class=\"modal-film-poster\" src=\"https://via.placeholder.com/248x315\" alt=\"Film Poster\">\r\n\r\n      <div class=\"modal-film-infos\">\r\n          <h3 class=\"modal-film-title\">Sample Film Title</h3>\r\n          <table class=\"modal-film-stats\">\r\n              <tr class=\"modal-film-tab-row\">\r\n                  <th class=\"modal-film-tab-header\">Vote / Votes</th>\r\n                  <td class=\"modal-film-tab-data\">\r\n                      <span class=\"modal-window-accent-vote\">8.5</span>\r\n                      /\r\n                      <span class=\"modal-window-accent-votes\">2000</span></td>\r\n              </tr>\r\n              <tr class=\"modal-film-tab-row\">\r\n                  <th class=\"modal-film-tab-header\">Popularity</th>\r\n                  <td class=\"modal-film-tab-data\">89.2</td>\r\n              </tr>\r\n              <tr class=\"modal-film-tab-row\">\r\n                  <th class=\"modal-film-tab-header\">Genre</th>\r\n                  <td class=\"modal-film-tab-data\">Action, Drama</td>\r\n              </tr>\r\n          </table>\r\n\r\n          <h3 class=\"modal-film-desc-about\">About</h3>\r\n          <p class=\"modal-film-desc\">Sample description  ~~ Lorem ipsum, dolor sit amet consectetur adipisicing elit. Quo commodi\r\n                iure eius repellendus perspiciatis. Ducimus sit temporibus provident architecto! Adipisci labore\r\n                accusantium maiores, laborum voluptates odit illum odio nam id. Lorem ipsum dolor sit amet consectetur\r\n                adipisicing elit. Rem fugiat ea, eos provident, illo veritatis quos id laborum a, enim ullam. Provident\r\n                atque id quam, aspernatur nemo necessitatibus saepe consequatur. Lorem ipsum dolor sit amet consectetur\r\n                adipisicing elit. Consequuntur asperiores cumque, debitis atque ab maiores beatae voluptatum aperiam\r\n                error nulla? Nostrum aperiam magni aut magnam ipsam maiores quaerat placeat omnis</p>\r\n          <button id=\"library-actions-btn\" type=\"submit\">Add to my library</button>\r\n      </div>\r\n    `;\r\n    backdrop.classList.remove('is-closed');\r\n    backdrop.classList.add('is-visible');\r\n  }\r\n\r\n  function closeModal() {\r\n    backdrop.classList.remove('is-visible');\r\n    backdrop.classList.add('is-closed');\r\n  }\r\n\r\n  // closeButton.addEventListener('click', closeModal);\r\n\r\n  backdrop.addEventListener('click', event => {\r\n    if (event.target === backdrop) {\r\n      closeModal();\r\n    }\r\n  });\r\n\r\n  try {\r\n    const movies = await tmdb.getTrendingMovies('week');\r\n\r\n    function displayGenres() {\r\n      const screenWidth = window.innerWidth;\r\n      let genresToShow = 2;\r\n\r\n      if (screenWidth <= 600) {\r\n        genresToShow = 1;\r\n      }\r\n\r\n      movieCardsContainer.innerHTML = '';\r\n\r\n      movies.slice(0, 3).forEach(async movie => {\r\n        const card = document.createElement('div');\r\n        card.classList.add('card');\r\n\r\n        const imageUrl = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\r\n        const title = movie.title;\r\n        const releaseDate = movie.release_date\r\n          ? new Date(movie.release_date).getFullYear()\r\n          : 'Unknown';\r\n        const rating = Math.round(movie.vote_average * 10) / 10;\r\n\r\n        const genresList = await tmdb.getMovieGenres();\r\n        const genreNames = movie.genre_ids\r\n          .slice(0, genresToShow)\r\n          .map(id => {\r\n            const genre = genresList.find(g => g.id === id);\r\n            const genreName = genre ? genre.name : 'Unknown';\r\n            return genreAbbreviations[genreName] || genreName;\r\n          })\r\n          .join(', ');\r\n\r\n        const maxStars = 5;\r\n        const fullStars = Math.floor(rating / 2);\r\n        const halfStar = rating % 2 >= 1 ? 1 : 0;\r\n        const emptyStars = maxStars - fullStars - halfStar;\r\n\r\n        const stars = [\r\n          ...Array(fullStars).fill(\r\n            '<svg class=\"star full\"><use xlink:href=\"#icon-star\"></use></svg>'\r\n          ),\r\n          ...Array(halfStar).fill(\r\n            '<svg class=\"star half\"><use xlink:href=\"#icon-star-half\"></use></svg>'\r\n          ),\r\n          ...Array(emptyStars).fill(\r\n            '<svg class=\"star empty\"><use xlink:href=\"#icon-star-outline\"></use></svg>'\r\n          ),\r\n        ].join('');\r\n\r\n        card.style.backgroundImage = `url(${imageUrl})`;\r\n        card.style.backgroundSize = 'cover';\r\n        card.style.backgroundPosition = 'center';\r\n\r\n        card.innerHTML = `\r\n          <div class=\"card-content\">\r\n            <h2>${title}</h2>\r\n            <p>${genreNames} | ${releaseDate} <span class=\"stars\">${stars}</span></p>\r\n          </div>\r\n        `;\r\n\r\n        card.addEventListener('click', openModal);\r\n\r\n        movieCardsContainer.appendChild(card);\r\n      });\r\n    }\r\n\r\n    displayGenres();\r\n\r\n    window.addEventListener('resize', displayGenres);\r\n  } catch (error) {\r\n    console.error('Error fetching data:', error);\r\n  }\r\n});\r\n","import throttle from 'lodash.throttle';\n\nwindow.addEventListener(\n  'scroll',\n  throttle(function () {\n    const scrollUpBtn = document.getElementById('scrollUpBtn');\n    if (window.scrollY > 50) {\n      scrollUpBtn.style.display = 'block';\n    } else {\n      scrollUpBtn.style.display = 'none';\n    }\n  }, 100)\n);\n\ndocument.getElementById('scrollUpBtn').addEventListener('click', function () {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n});\n","'use strict';\n\nexport default class LocalMovieManager {\n  constructor(localStorageKey) {\n    this.localStorageKey = localStorageKey;\n    this.movies = JSON.parse(localStorage.getItem(this.localStorageKey)) || [];\n  }\n\n  _saveData() {\n    try {\n      localStorage.setItem(this.localStorageKey, JSON.stringify(this.movies));\n    } catch (error) {\n      console.error('Error saving data:', error);\n    }\n  }\n\n  addMovie(movie) {\n    const index = this.movies.findIndex(ele => ele.id === movie.id);\n    if (index === -1) {\n      this.movies.push(movie);\n      this._saveData();\n    } else {\n      console.log('Movie already added:', movie);\n    }\n  }\n\n  removeMovie(id) {\n    const index = this.movies.findIndex(ele => ele.id === id);\n    if (index !== -1) {\n      this.movies.splice(index, 1);\n      this._saveData();\n    } else {\n      console.log('Movie not found');\n    }\n  }\n\n  getMovies() {\n    return this.movies;\n  }\n}\n\n// Testing\nconst manager = new LocalMovieManager('local-movies');\nconst test = async () => {\n  const log = () => console.log(manager.getMovies());\n  try {\n    log();\n    manager.addMovie({ id: '438631', title: 'Dune' });\n    log();\n    manager.addMovie({ id: '693134', title: 'Dune: Part Two' });\n    log();\n    manager.removeMovie('438631');\n    log();\n    manager.removeMovie('693134');\n    log();\n  } catch (error) {\n    console.error('Test failed:', error);\n  }\n};\n\n// test();\n","'use strict';\nimport TmdbApi from \"./tmdb-api\";\nimport LocalMovieManager from \"./local-movie-manager\";\n\n// adding event listeners to open modal window and close by kliocking exit button or by pressing ESC\ndocument.addEventListener('DOMContentLoaded', function () {\n  const openBtn = document.querySelector('.modal-btn-open');\n  const closeBtn = document.querySelector('.modal-btn-close');\n  const backdrop = document.querySelector('.backdrop');\n\n  if (openBtn && closeBtn && backdrop) {\n    openBtn.addEventListener('click', () => {\n      backdrop.classList.remove('is-closed');\n    });\n\n    closeBtn.addEventListener('click', () => {\n      backdrop.classList.add('is-closed');\n    });\n\n    document.addEventListener('keydown', function (e) {\n      if (e.key === 'Escape') {\n        backdrop.classList.add('is-closed');\n      }\n    });\n  } else {\n    console.error(\n      'One or more elements are missing. Check the selectors and the HTML structure.'\n    );\n  }\n});\n\n// ---------------------------------------------------------------------------------------------\n\n// const markup = {};\n// // ?\n\n// export function createMarkup(data) {\n//   return data.map(image => `\n//     <div class=\"modal-window\">\n//         <button class=\"modal-btn-close\" type=\"button\">\n//             <svg class=\"modal-btn-close-icon\" width=\"10.5\" height=\"10.5\" fill=\"#ffffff\">\n//                 <use href=\"./images/icons.svg#icon-close\"></use>\n//             </svg>\n//         </button>\n\n//         <img class=\"modal-film-poster\">\n\n//         <div class=\"modal-film-infos\">\n//             <h3 class=\"modal-film-title\">${film.title}</h3>\n//             <table class=\"modal-film-stats\">\n//                 <tr class=\"modal-film-tab-row\">\n//                     <th class=\"modal-film-tab-header\">Vote / Votes</th>\n//                     <td class=\"modal-film-tab-data\">\n//                         <span class=\"modal-window-accent-vote\">${vote}</span>\n//                         /\n//                         <span class=\"modal-window-accent-votes\">${votes}</span></td>\n//                 </tr>\n//                 <tr class=\"modal-film-tab-row\">\n//                     <th class=\"modal-film-tab-header\">Popularity</th>\n//                     <td class=\"modal-film-tab-data\">${popular.}</td>\n//                 </tr>\n//                 <tr class=\"modal-film-tab-row\">\n//                     <th class=\"modal-film-tab-header\">Genre</th>\n//                     <td class=\"modal-film-tab-data\">${genre}</td>\n//                 </tr>\n//             </table>\n\n//             <h3 class=\"modal-film-desc-about\">About</h3>\n//             <p class=\"modal-film-desc\">${descr} ~~ Lorem ipsum, dolor sit amet consectetur adipisicing elit. Quo commodi\n//                 iure eius repellendus perspiciatis. Ducimus sit temporibus provident architecto! Adipisci labore\n//                 accusantium maiores, laborum voluptates odit illum odio nam id. Lorem ipsum dolor sit amet consectetur\n//                 adipisicing elit. Rem fugiat ea, eos provident, illo veritatis quos id laborum a, enim ullam. Provident\n//                 atque id quam, aspernatur nemo necessitatibus saepe consequatur. Lorem ipsum dolor sit amet consectetur\n//                 adipisicing elit. Consequuntur asperiores cumque, debitis atque ab maiores beatae voluptatum aperiam\n//                 error nulla? Nostrum aperiam magni aut magnam ipsam maiores quaerat placeat omnis.</p>\n//             <button id=\"library-actions-btn\" type=\"submit\">Add to my library</button>\n\n//         </div>\n//     </div>\n// `).join('');\n// }\n\n\n\n// // ---------------------------------------------------------------------------------------------\n\n// const tmdb = new TmdbApi();\n// const infoMovie = async (id, info) => {\n//   try {\n//     const result = await tmdb.getMovieDetails(id, info);\n//     console.log(result); // Test na konsoli\n//     return result;\n//   } catch (error) {\n//     console.error(error);\n//   }\n// };\n// title();\n\n// // title(43764, 'popularity');\n\n\n// // ---\n// const movieManager = new LocalMovieManager();\n// // ---\n","const teamLink = document.getElementById('our-team-btn');\nconst teamBackdrop = document.querySelector('.team');\nconst teamCloseBtn = document.querySelector('.team-close-btn');\nconst bodyElement = document.querySelector('body');\n\nteamLink.addEventListener('click', onLinkClick);\n\nfunction onLinkClick(event) {\n  event.preventDefault();\n\n  teamBackdrop.classList.remove('is-hidden');\n  document.body.classList.add('modal-open');\n\n  addAllEventListeners();\n}\n\nfunction onEscClick(event) {\n  event.preventDefault();\n\n  if (event.code !== 'Escape') {\n    return;\n  }\n\n  closingModalStaff();\n}\n\nfunction onBackdropClick(event) {\n  if (event.target.closest('.team-window')) {\n    return;\n  }\n\n  closingModalStaff();\n}\n\nfunction onCloseBtnClick(event) {\n  event.preventDefault();\n\n  closingModalStaff();\n}\n\nfunction addAllEventListeners() {\n  document.addEventListener('keydown', onEscClick);\n  teamBackdrop.addEventListener('click', onBackdropClick);\n  teamCloseBtn.addEventListener('click', onCloseBtnClick);\n  bodyElement.style.overflow = 'hidden';\n}\n\nfunction closingModalStaff() {\n  document.removeEventListener('keydown', onEscClick);\n  teamBackdrop.removeEventListener('click', onBackdropClick);\n  teamCloseBtn.removeEventListener('click', onCloseBtnClick);\n\n  teamBackdrop.classList.add('is-hidden');\n  document.body.classList.remove('modal-open');\n  bodyElement.style.overflow = 'auto';\n}\n","import TmdbApi from \"./tmdb-api\";\n\nconst tmdb = new TmdbApi();\nconst test = async () => {\n  try {\n    console.log(await tmdb.getTrendingMovies('day'));\n    console.log(await tmdb.getTrendingMovies('week'));\n    console.log(await tmdb.getUpcomingMovies());\n    console.log(await tmdb.searchMovie('Dune'));\n    console.log(await tmdb.getMovieDetails(438631, 'title'));\n    console.log(await tmdb.getMovieVideos(438631));\n    console.log(await tmdb.getMovieGenres());\n    console.log(await tmdb.getCountriesList());\n  } catch (error) {\n    console.error('Test failed:', error);\n  }\n};\n\nconst displayMovieInfo = (movie) => {\n  const hero = document.getElementById(\"hero-section\");\n  const heroTextCont = document.querySelector('.hero-text-cont');\n  heroTextCont.innerHTML = `\n    <h2 class=\"title\">${movie.title}</h2>\n    <div class=\"star-rating\">\n      ${getStarRatingHTML(movie.vote_average)}\n    </div>\n    <p class=\"desc\">${movie.overview}</p>\n    <div class=\"hero-btn\">\n      <button class=\"watch-btn\" onclick=\"watchTrailer(${movie.id})\">Watch trailer</button> \n      <button class=\"details-btn\" onclick=\"showDetails(${movie.id})\">More details</button>\n    </div>\n  `;\n\n  const imageUrl = `https://image.tmdb.org/t/p/w500${movie.backdrop_path}`;\n  \n  hero.style.backgroundImage = `linear-gradient(270deg, rgba(89, 130, 252, 0) 5%, rgba(0, 0, 0, 1) 65%), url(${imageUrl})`, innerWidth;\n  hero.style.backgroundPosition = \"center\"\n\n};\n\nconst getStarRatingHTML = (voteAverage) => {\n  const stars = Math.round(voteAverage / 2);\n  let starHTML = '';\n  for (let i = 0; i < 5; i++) {\n    if (i < stars) {\n      starHTML += '<img src=\"./img/star.svg\" alt=\"star\">';\n    } else {\n      starHTML += '<img src=\"./img/star-outline.svg\" alt=\"star-outline\">';\n    }\n  }\n  return starHTML;\n};\n\nconst watchTrailer = async (movieId) => {\n  const videos = await tmdb.getMovieVideos(movieId);\n  const trailer = videos.results.find(video => video.type === 'Trailer');\n  if (trailer) {\n    window.open(`https://www.youtube.com/watch?v=${trailer.key}`, '_blank');\n  } else {\n    alert('Trailer not available');\n  }\n};\n\nconst showDetails = (movieId) => {\n  window.location.href = `/details.html?movieId=${movieId}`;\n};\n\nconst loadHeroContent = async () => {\n  try {\n    const movies = await tmdb.getTrendingMovies('day');\n    if (movies.length > 0) {\n      const randomMovie = movies[Math.floor(Math.random() * movies.length)];\n      displayMovieInfo(randomMovie);\n    } else {\n      displayDefaultHero();\n    }\n  } catch (error) {\n    console.error('Failed to load trending movies:', error);\n    displayDefaultHero();\n  }\n};\n\nconst displayDefaultHero = () => {\n  const hero = document.getElementById(\"hero-section\");\n  const textCont = document.getElementById(\"text-cont\");\n  hero.classList.add(\"hero-default\");\n  textCont.classList.remove(\"hero-text-cont\");\n  textCont.classList.add(\"default-text-cont\");\n  const defaultTextCont = document.querySelector('.default-text-cont');\n  defaultTextCont.innerHTML = `\n    <h2 class=\"title-default\">Let’s Make Your Own Cinema</h2>\n    <p class=\"desc-default\">Is a guide to creating a personalized movie theater experience. \n    You'll need a projector, screen, and speakers. \n    Decorate your space, choose your films, and stock up on snacks for the full experience.</p>\n    <button class=\"get-started-btn\" onclick=\"location.href='/catalog.html'\">Get started</button>\n  `;\n};\n\ndocument.addEventListener('DOMContentLoaded', loadHeroContent);","import TmdbApi from './tmdb-api.js';\nimport Library from './local-movie-manager.js';\n\nconst tmdb = new TmdbApi();\nconst library = new Library('myLibrary');\n\nasync function getUpcomingMovies() {\n  try {\n    const movies = await tmdb.getUpcomingMovies();\n    const today = new Date();\n    const thisMonthMovies = movies.filter(movie => {\n      const releaseDate = new Date(movie.release_date);\n      return (\n        releaseDate.getFullYear() === today.getFullYear() &&\n        releaseDate.getMonth() === today.getMonth()\n      );\n    });\n\n    if (thisMonthMovies.length === 0) {\n      displayMessage('No upcoming movies this month.');\n    } else {\n      const randomMovie =\n        thisMonthMovies[Math.floor(Math.random() * thisMonthMovies.length)];\n      displayMovie(randomMovie);\n    }\n  } catch (error) {\n    console.error('Failed to fetch upcoming movies:', error);\n    displayMessage('Failed to fetch upcoming movies. Please try again later');\n  }\n}\n\nfunction displayMessage(message) {\n  const movieContainer = document.getElementById('movie-container');\n  movieContainer.innerHTML = `<p>${message}</p>`;\n}\n\nfunction displayMovie(movie) {\n  const movieContainer = document.getElementById('movie-container');\n  const imageUrl = `https://image.tmdb.org/t/p/original/${movie.backdrop_path}`;\n  const releaseDate = new Date(movie.release_date).toLocaleDateString();\n  const genres = movie.genre_ids.map(id => genreMap[id]).join(', ');\n\n  const html = `\n    <div class=\"upcoming-container\">\n      <div class=\"upcoming-img\">\n        <img class=\"upcoming-img\" src=\"${imageUrl}\" alt=\"${movie.title}\">\n      </div>\n      <div class=\"movie-details\">\n        <h2 class=\"movie-title\">${movie.title}</h2>\n          <div class=\"info-item\">\n            <div class=\"\">\n            <p class=\"detail-item\">Release date:<span class=\"relase-date\">${releaseDate}</span></p>\n            <p class=\"detail-item\">Vote / Votes:<span class=\"vote-count\">${movie.vote_count}</span></p>\n            </div>\n            <div  class=\"\">\n            <p class=\"detail-item\">Popularity:<span class=\"popularity-value\">${movie.popularity}</span></p>\n            <div class=\"genre-p\"><p class=\"genre-item\">Genre:<div class=\"genre-div\"><span class=\"genre\">${genres}</span></div></p>\n            </div></div>\n          </div>\n        <p class=\"about\">ABOUT</p>\n        <p class=\"overview\">${movie.overview}</p>\n        <button id=\"library-btn\" data-id=\"${movie.id}\">Add to my library</button>\n      </div>\n    </div>\n  `;\n\n  movieContainer.innerHTML = html;\n\n  const libraryBtn = document.getElementById('library-btn');\n  libraryBtn.addEventListener('click', () => toggleLibrary(movie));\n  updateLibraryButton(movie.id);\n}\n\nfunction toggleLibrary(movie) {\n  const movieId = movie.id;\n  const isInLibrary = library.getMovies().some(m => m.id === movieId);\n\n  if (isInLibrary) {\n    library.removeMovie(movieId);\n    alert('Removed from my library');\n  } else {\n    library.addMovie(movie);\n    alert('Added to my library');\n  }\n\n  updateLibraryButton(movieId);\n}\n\nfunction updateLibraryButton(movieId) {\n  const isInLibrary = library.getMovies().some(m => m.id === movieId);\n  const libraryBtn = document.getElementById('library-btn');\n\n  if (isInLibrary) {\n    libraryBtn.textContent = 'Remove from my library';\n  } else {\n    libraryBtn.textContent = 'Add to my library';\n  }\n}\n\nconst genreMap = {};\ntmdb.getMovieGenres().then(genres => {\n  genres.forEach(genre => {\n    genreMap[genre.id] = genre.name;\n  });\n\n  getUpcomingMovies();\n});\n","import TmbdbApi from './tmdb-api';\n\ndocument.addEventListener('DOMContentLoaded', async function () {\n  const catalogCardsContainer = document.querySelector('.catalog-movie-list');\n  const tmdb = new TmbdbApi();\n\n  const genreAbbreviations = {\n    'Science Fiction': 'Sci-Fi',\n  };\n\n  const backdrop = document.querySelector('.backdrop');\n  const modalWindow = backdrop.querySelector('.modal-window');\n  // const closeButton = modalWindow.querySelector('.modal-btn-close');\n\n  function openModal() {\n    modalWindow.innerHTML = `\n    <button class=\"modal-btn-close\" type=\"button\">\n      <svg class=\"modal-btn-close-icon\" width=\"10.5\" height=\"10.5\" fill=\"#ffffff\">\n        <use href=\"\"></use>\n      </svg>\n    </button>\n\n    <img class=\"modal-film-poster\" src=\"https://via.placeholder.com/248x315\" alt=\"Film Poster\">\n\n    <div class=\"modal-film-infos\">\n        <h3 class=\"modal-film-title\">Sample Film Title</h3>\n        <table class=\"modal-film-stats\">\n            <tr class=\"modal-film-tab-row\">\n                <th class=\"modal-film-tab-header\">Vote / Votes</th>\n                <td class=\"modal-film-tab-data\">\n                    <span class=\"modal-window-accent-vote\">8.5</span>\n                    /\n                    <span class=\"modal-window-accent-votes\">2000</span></td>\n            </tr>\n            <tr class=\"modal-film-tab-row\">\n                <th class=\"modal-film-tab-header\">Popularity</th>\n                <td class=\"modal-film-tab-data\">89.2</td>\n            </tr>\n            <tr class=\"modal-film-tab-row\">\n                <th class=\"modal-film-tab-header\">Genre</th>\n                <td class=\"modal-film-tab-data\">Action, Drama</td>\n            </tr>\n        </table>\n\n        <h3 class=\"modal-film-desc-about\">About</h3>\n        <p class=\"modal-film-desc\">Sample description  ~~ Lorem ipsum, dolor sit amet consectetur adipisicing elit. Quo commodi\n              iure eius repellendus perspiciatis. Ducimus sit temporibus provident architecto! Adipisci labore\n              accusantium maiores, laborum voluptates odit illum odio nam id. Lorem ipsum dolor sit amet consectetur\n              adipisicing elit. Rem fugiat ea, eos provident, illo veritatis quos id laborum a, enim ullam. Provident\n              atque id quam, aspernatur nemo necessitatibus saepe consequatur. Lorem ipsum dolor sit amet consectetur\n              adipisicing elit. Consequuntur asperiores cumque, debitis atque ab maiores beatae voluptatum aperiam\n              error nulla? Nostrum aperiam magni aut magnam ipsam maiores quaerat placeat omnis</p>\n        <button id=\"library-actions-btn\" type=\"submit\">Add to my library</button>\n    </div>\n  `;\n    backdrop.classList.remove('is-closed');\n    backdrop.classList.add('is-visible');\n  }\n\n  function closeModal() {\n    backdrop.classList.remove('is-visible');\n    backdrop.classList.add('is-closed');\n  }\n\n  // closeButton.addEventListener('click', closeModal);\n\n  backdrop.addEventListener('click', event => {\n    if (event.target === backdrop) {\n      closeModal();\n    }\n  });\n\n  try {\n    const movies = await tmdb.getTrendingMovies('day');\n\n    function displayGenres() {\n      const screenWidth = window.innerWidth;\n      let genresToShow = 2;\n\n      if (screenWidth <= 600) {\n        genresToShow = 1;\n      }\n\n      catalogCardsContainer.innerHTML = '';\n\n      movies.slice(0, 9).forEach(async movie => {\n        const card = document.createElement('div');\n        card.classList.add('card');\n\n        const imageUrl = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n        const title = movie.title;\n        const releaseDate = movie.release_date\n          ? new Date(movie.release_date).getFullYear()\n          : 'Unknown';\n        const rating = Math.round(movie.vote_average * 10) / 10;\n\n        const genresList = await tmdb.getMovieGenres();\n        const genreNames = movie.genre_ids\n          .slice(0, genresToShow)\n          .map(id => {\n            const genre = genresList.find(g => g.id === id);\n            const genreName = genre ? genre.name : 'Unknown';\n            return genreAbbreviations[genreName] || genreName;\n          })\n          .join(', ');\n\n        const maxStars = 5;\n        const fullStars = Math.floor(rating / 2);\n        const halfStar = rating % 2 >= 1 ? 1 : 0;\n        const emptyStars = maxStars - fullStars - halfStar;\n\n        const stars = [\n          ...Array(fullStars).fill(\n            '<svg class=\"star full\"><use xlink:href=\"#icon-star\"></use></svg>'\n          ),\n          ...Array(halfStar).fill(\n            '<svg class=\"star half\"><use xlink:href=\"#icon-star-half\"></use></svg>'\n          ),\n          ...Array(emptyStars).fill(\n            '<svg class=\"star empty\"><use xlink:href=\"#icon-star-outline\"></use></svg>'\n          ),\n        ].join('');\n\n        card.style.backgroundImage = `url(${imageUrl})`;\n        card.style.backgroundSize = 'cover';\n        card.style.backgroundPosition = 'center';\n\n        card.innerHTML = `\n        <div class=\"card-content\">\n          <h2>${title}</h2>\n          <p>${genreNames} | ${releaseDate} <span class=\"stars\">${stars}</span></p>\n        </div>\n      `;\n\n        card.addEventListener('click', openModal);\n\n        catalogCardsContainer.appendChild(card);\n      });\n    }\n\n    displayGenres();\n\n    window.addEventListener('resize', displayGenres);\n  } catch (error) {\n    console.error('Error fetching data:', error);\n  }\n});\n\nconst test = async () => {\n  try {\n    console.log(await tmdb.getTrendingMovies('day'));\n    console.log(await tmdb.getTrendingMovies('week'));\n    console.log(await tmdb.searchMovie('Dune'));\n    console.log(await tmdb.getMovieDetails(438631, 'title'));\n    console.log(await tmdb.getMovieVideos(438631));\n  } catch (error) {\n    console.error('Test failed:', error);\n  }\n};\n\nconst search = async text => {\n  try {\n    const result = await tmdb.searchMovie(text);\n    console.log(result);\n    return result;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// const trending = tmdb.getTrendingMovies('week').then(result => {\n//   console.log(result);\n//   return result;\n// });\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const input = document.querySelector('.input-text');\n  const sorryMessage = document.querySelector('.catalog-sorry-message');\n  const movieListItems = document.querySelectorAll('.catalog-movie-list-item');\n\n  sorryMessage.style.display = 'none'; // Ukryj wiadomość na początku\n\n  // input.addEventListener('input', function () {\n  //   const query = input.value.toLowerCase();\n  //   let hasResults = false;\n\n  //   movieListItems.forEach(item => {\n  //     const title = item\n  //       .querySelector('.catalog-movie-title')\n  //       .textContent.toLowerCase();\n  //     if (title.includes(query)) {\n  //       item.style.display = ''; // Pokaż element\n  //       hasResults = true;\n  //     } else {\n  //       item.style.display = 'none'; // Ukryj element\n  //     }\n  //   });\n\n  //   if (!hasResults) {\n  //     sorryMessage.style.display = 'block'; // Pokaż wiadomość\n  //   } else {\n  //     sorryMessage.style.display = 'none'; // Ukryj wiadomość\n  //   }\n  // });\n});\n","const navLinks = document.querySelectorAll('.header-nav-list');\nconst mobNavLinks = document.querySelectorAll('.mobile-nav-list');\nconst currentUrl = window.location.href;\n\nnavLinks.forEach(link => {\n  if (link.href === currentUrl) {\n    link.classList.add('active');\n  } else {\n    link.classList.remove('active');\n  }\n});\n\nmobNavLinks.forEach(link => {\n  if (link.href === currentUrl) {\n    link.classList.add('active');\n  } else {\n    link.classList.remove('active');\n  }\n});\n\nconst menuButton = document.getElementById('menu-btn');\nconst modal = document.getElementById('mobile-menu-modal');\nconst backdrop = document.getElementById('mobile-menu-backdrop');\n\nmenuButton.addEventListener('click', function () {\n  modal.classList.add('open');\n  backdrop.style.display = 'block';\n});\n\nbackdrop.addEventListener('click', function (event) {\n  if (event.target === backdrop) {\n    modal.classList.remove('open');\n    backdrop.style.display = 'none';\n  }\n});\n\ndocument.addEventListener('click', function (event) {\n  if (!modal.contains(event.target) && event.target !== menuButton) {\n    modal.classList.remove('open');\n    backdrop.style.display = 'none';\n  }\n});\n"],"names":["switcher","root","switchTheme","newTheme","TmdbApi","axios","endpoint","params","error","time_window","query","page","movie_id","movieCardsContainer","tmdb","genreAbbreviations","backdrop","modalWindow","openModal","closeModal","event","displayGenres","screenWidth","genresToShow","movies","movie","card","imageUrl","title","releaseDate","rating","genresList","genreNames","id","genre","g","genreName","maxStars","fullStars","halfStar","emptyStars","stars","throttle","scrollUpBtn","LocalMovieManager","localStorageKey","ele","index","openBtn","closeBtn","e","teamLink","teamBackdrop","teamCloseBtn","bodyElement","onLinkClick","addAllEventListeners","onEscClick","closingModalStaff","onBackdropClick","onCloseBtnClick","displayMovieInfo","hero","heroTextCont","getStarRatingHTML","voteAverage","starHTML","i","loadHeroContent","randomMovie","displayDefaultHero","textCont","defaultTextCont","library","Library","getUpcomingMovies","today","thisMonthMovies","displayMessage","displayMovie","message","movieContainer","genres","genreMap","html","toggleLibrary","updateLibraryButton","movieId","m","isInLibrary","libraryBtn","catalogCardsContainer","TmbdbApi","sorryMessage","navLinks","mobNavLinks","currentUrl","link","menuButton","modal"],"mappings":"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"}