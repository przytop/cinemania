{"version":3,"file":"catalog.js","sources":["../src/js/catalog.js"],"sourcesContent":["import TmdbApi from './tmdb-api';\nimport openMovieInfoModal from './modal-window';\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n  const tmdb = new TmdbApi();\n  const catalogCardsContainer = document.querySelector('.catalog-movie-list');\n  const sorryMessage = document.querySelector('.catalog-sorry-message');\n  const input = document.querySelector('.input-text');\n  const searchButton = document.querySelector('.catalog-button');\n  const yearSelect = document.querySelector('.year-select');\n  const xButton = document.querySelector('.x-button');\n  const pagination = document.querySelector('.pagination-container');\n  const loaderCatalog = document.getElementById('loader-catalog');\n  const genreAbbreviations = { 'Science Fiction': 'Sci-Fi' };\n\n  let query = '';\n  let currentPage = 1;\n  let totalPages;\n\n  sorryMessage.style.display = 'none';\n\n  const fetchMovies = async (page, releaseYear) => {\n    try {\n      let movies = [];\n\n      if (query) {\n        yearSelect.disabled = false;\n        const response = await tmdb.searchMovieTotal(query, page, releaseYear);\n        movies = response.results;\n        totalPages = response.total_pages;\n      } else {\n        yearSelect.disabled = true;\n        const response = await tmdb.getTrendingMoviesTotal('week', page);\n        movies = response.results;\n        totalPages = 5;\n      }\n\n      loaderCatalog.style.display = 'none';\n      return movies;\n    } catch (e) {\n      loaderCatalog.style.display = 'none';\n      console.error('Error fetching movies:', e);\n      return [];\n    }\n  };\n\n  const fetchGenres = async () => {\n    try {\n      return await tmdb.getMovieGenres();\n    } catch (e) {\n      console.error('Error fetching genres:', e);\n      return [];\n    }\n  };\n\n  const starRating = rating => {\n    const fullStars = Math.floor(rating / 2);\n    const halfStar = rating % 2 >= 1 ? 1 : 0;\n    return (\n      '<svg class=\"star full\"><use xlink:href=\"#icon-star\"></use></svg>'.repeat(\n        fullStars\n      ) +\n      (halfStar\n        ? '<svg class=\"star half\"><use xlink:href=\"#icon-star-half\"></use></svg>'\n        : '') +\n      '<svg class=\"star empty\"><use xlink:href=\"#icon-star-outline\"></use></svg>'.repeat(\n        5 - Math.ceil(rating / 2)\n      )\n    );\n  };\n\n  const renderMovies = async page => {\n    catalogCardsContainer.innerHTML = '';\n    loaderCatalog.style.display = 'block';\n\n    const movies = await fetchMovies(page, yearSelect.value);\n    const getGenres = await fetchGenres();\n\n    sorryMessage.style.display = movies.length ? 'none' : 'block';\n\n    movies.forEach(movie => {\n      const genres = movie.genre_ids\n        .slice(0, 2)\n        .map(id => getGenres.find(genre => genre.id === id)?.name || 'Unknown')\n        .map(name => genreAbbreviations[name] || name)\n        .join(', ');\n      const releaseDate = movie.release_date\n        ? new Date(movie.release_date).getFullYear()\n        : 'Unknown';\n      const rating = Math.round(movie.vote_average * 10) / 10;\n\n      const card = document.createElement('li');\n      card.classList.add('card');\n      card.style.background = movie.poster_path ? `url(https://image.tmdb.org/t/p/w500${movie.poster_path}) center/cover` : 'url(img/poster-placeholder.jpg) center/cover';\n      card.dataset.id = movie.id;\n      card.innerHTML = `\n        <div class=\"card-content\">\n          <h2>${movie.title}</h2>\n          <p>${genres} | ${releaseDate} <span class=\"stars\">${starRating(\n        rating\n      )}</span></p>\n        </div>\n      `;\n      card.addEventListener('click', () => openMovieInfoModal(movie.id));\n\n      catalogCardsContainer.appendChild(card);\n    });\n\n    renderPagination(page, totalPages);\n  };\n\n  const renderPagination = (currentPage, totalPages) => {\n    pagination.innerHTML = '';\n\n    if (totalPages <= 1) return;\n\n    const createPageButton = page => {\n      const button = document.createElement('button');\n      button.textContent = page;\n      button.classList.add('page-number-button');\n      if (page === currentPage) {\n        button.classList.add('active');\n        button.disabled = true;\n      }\n      button.addEventListener('click', () => {\n        currentPage = page;\n        renderMovies(currentPage);\n      });\n      return button;\n    };\n\n    const prevButton = document.createElement('button');\n    prevButton.textContent = '<';\n    prevButton.classList.add('arrow-button');\n    prevButton.disabled = currentPage === 1;\n    prevButton.addEventListener('click', () => {\n      if (currentPage > 1) {\n        currentPage--;\n        renderMovies(currentPage);\n      }\n    });\n    pagination.appendChild(prevButton);\n\n    const firstButton = createPageButton(1);\n    pagination.appendChild(firstButton);\n\n    if (currentPage > 3) {\n      const dots = document.createElement('span');\n      dots.textContent = '...';\n      pagination.appendChild(dots);\n    }\n\n    let visiblePages = 3;\n    if (window.innerWidth >= 768) visiblePages = 5;\n    if (window.innerWidth >= 1024) visiblePages = 7;\n\n    const startPage = Math.max(1, currentPage -  Math.floor(visiblePages / 2));\n    const endPage = Math.min(totalPages, currentPage +  Math.floor(visiblePages / 2));\n\n    for (let page = startPage; page <= endPage; page++) {\n      if (page !== 1) {\n        // Skip page 1 because it's already added\n        pagination.appendChild(createPageButton(page));\n      }\n    }\n\n    if (endPage < totalPages) {\n      const dots = document.createElement('span');\n      dots.textContent = '...';\n      pagination.appendChild(dots);\n      pagination.appendChild(createPageButton(totalPages));\n    }\n\n    const nextButton = document.createElement('button');\n    nextButton.textContent = '>';\n    nextButton.classList.add('arrow-button');\n    nextButton.disabled = currentPage === totalPages;\n    nextButton.addEventListener('click', () => {\n      if (currentPage < totalPages) {\n        currentPage++;\n        renderMovies(currentPage);\n      }\n    });\n    pagination.appendChild(nextButton);\n  };\n\n  const handleSearch = () => {\n    query = input.value.trim();\n    currentPage = 1;\n    renderMovies(currentPage);\n  };\n\n  input.addEventListener('keydown', e => {\n    if (e.key === 'Enter') {\n      if (input.value.trim()) {\n        handleSearch();\n      }\n    }\n  });\n  input.addEventListener(\n    'input',\n    () => (xButton.style.visibility = input.value ? 'visible' : 'hidden')\n  );\n\n  xButton.addEventListener('click', () => {\n    input.value = '';\n    xButton.style.visibility = 'hidden';\n  });\n\n  searchButton.addEventListener('click', () => {\n    if (input.value.trim()) {\n      handleSearch();\n    } else {\n      input.focus();\n    }\n  });\n\n  const currentYear = new Date().getFullYear();\n  const startYear = 1900;\n\n  for (let year = currentYear; year >= startYear; year--) {\n    const option = document.createElement('option');\n    option.value = year;\n    option.textContent = year;\n    yearSelect.appendChild(option);\n  }\n\n  yearSelect.addEventListener('change', () => {\n    currentPage = 1;\n    renderMovies(currentPage);\n  });\n\n  renderMovies(currentPage);\n});\n"],"names":["tmdb","TmdbApi","catalogCardsContainer","sorryMessage","input","searchButton","yearSelect","xButton","pagination","loaderCatalog","genreAbbreviations","query","currentPage","totalPages","fetchMovies","page","releaseYear","movies","response","e","fetchGenres","starRating","rating","fullStars","halfStar","renderMovies","getGenres","movie","genres","id","_a","genre","name","releaseDate","card","openMovieInfoModal","renderPagination","createPageButton","button","prevButton","firstButton","dots","visiblePages","startPage","endPage","nextButton","handleSearch","currentYear","startYear","year","option"],"mappings":"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"}