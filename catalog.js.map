{"version":3,"file":"catalog.js","sources":["../src/js/catalog.js"],"sourcesContent":["import TmdbApi from './tmdb-api';\nimport openMovieInfoModal from './modal-window';\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n  const tmdb = new TmdbApi();\n  const catalogCardsContainer = document.querySelector('.catalog-movie-list');\n  const sorryMessage = document.querySelector('.catalog-sorry-message');\n  const input = document.querySelector('.input-text');\n  const searchButton = document.querySelector('.catalog-button');\n  const yearSelect = document.querySelector('.year-select');\n  const xButton = document.querySelector('.x-button');\n  const pagination = document.querySelector('.pagination-container'); // Container for pagination buttons\n\n  const genreAbbreviations = { 'Science Fiction': 'Sci-Fi' };\n  let currentPage = 1;\n  let totalPages = 1;\n  let query = '';\n\n  sorryMessage.style.display = 'none';\n\n  const fetchMovies = async (page = 1, resultsPerPage = 18) => {\n    try {\n      const movies = query\n        ? await tmdb.searchMovieTotal(query, page)\n        : await tmdb.getTrendingMoviesTotal('week', page);\n      totalPages = Math.ceil(movies.total_results / 20); // Calculate total pages\n      return movies.results.slice(0, resultsPerPage);\n    } catch (e) {\n      console.error('Error fetching movies:', e);\n      return [];\n    }\n  };\n\n  const fetchGenres = async () => {\n    try { return await tmdb.getMovieGenres(); }\n    catch (e) { console.error('Error fetching genres:', e); return []; }\n  };\n\n  const getGenres = await fetchGenres();\n  const filterByYear = (movies, year) => year ? movies.filter(m => new Date(m.release_date).getFullYear() == year) : movies;\n\n  const starRating = rating => {\n    const fullStars = Math.floor(rating / 2);\n    const halfStar = rating % 2 >= 1 ? 1 : 0;\n    return '<svg class=\"star full\"><use xlink:href=\"#icon-star\"></use></svg>'.repeat(fullStars) +\n           (halfStar ? '<svg class=\"star half\"><use xlink:href=\"#icon-star-half\"></use></svg>' : '') +\n           '<svg class=\"star empty\"><use xlink:href=\"#icon-star-outline\"></use></svg>'.repeat(5 - Math.ceil(rating / 2));\n  };\n\n  const renderMovies = async (page = 1) => {\n    const movies = filterByYear(await fetchMovies(page), yearSelect.value);\n    catalogCardsContainer.innerHTML = '';\n    sorryMessage.style.display = movies.length ? 'none' : 'block';\n\n    movies.forEach(m => {\n      const genres = m.genre_ids.slice(0, 2).map(id => (getGenres.find(g => g.id === id)?.name || 'Unknown')).map(name => genreAbbreviations[name] || name).join(', ');\n      const releaseDate = m.release_date ? new Date(m.release_date).getFullYear() : 'Unknown';\n      const rating = Math.round(m.vote_average * 10) / 10;\n\n      const card = document.createElement('li');\n      card.classList.add('card');\n      card.style.background = `url(https://image.tmdb.org/t/p/w500${m.poster_path}) center/cover`;\n      card.dataset.id = m.id;\n      card.innerHTML = `\n        <div class=\"card-content\">\n          <h2>${m.title}</h2>\n          <p>${genres} | ${releaseDate} <span class=\"stars\">${starRating(rating)}</span></p>\n        </div>\n      `;\n      card.addEventListener('click', () => openMovieInfoModal(m.id));\n      catalogCardsContainer.appendChild(card);\n    });\n\n    renderPagination(page);\n  };\n\n  const renderPagination = (currentPage) => {\n    pagination.innerHTML = '';\n\n    if (totalPages <= 1) return;\n\n    const createPageButton = page => {\n      const button = document.createElement('button');\n      button.textContent = page;\n      button.classList.add('page-number-button');\n      if (page === currentPage) {\n        button.classList.add('active');\n      }\n      button.addEventListener('click', () => {\n        currentPage = page;\n        renderMovies(currentPage);\n      });\n      return button;\n    };\n\n    if (totalPages > 1) {\n      const prevButton = document.createElement('button');\n      prevButton.textContent = '←';\n      prevButton.classList.add('arrow-button');\n      prevButton.disabled = currentPage === 1;\n      prevButton.addEventListener('click', () => {\n        if (currentPage > 1) {\n          currentPage--;\n          renderMovies(currentPage);\n        }\n      });\n      pagination.appendChild(prevButton);\n    }\n\n    const startPage = Math.max(1, currentPage - 2);\n    const endPage = Math.min(totalPages, currentPage + 2);\n\n    for (let page = startPage; page <= endPage; page++) {\n      pagination.appendChild(createPageButton(page));\n    }\n\n    if (endPage < totalPages) {\n      const dots = document.createElement('span');\n      dots.textContent = '...';\n      pagination.appendChild(dots);\n      pagination.appendChild(createPageButton(totalPages));\n    }\n\n    if (totalPages > 1) {\n      const nextButton = document.createElement('button');\n      nextButton.textContent = '→';\n      nextButton.classList.add('arrow-button');\n      nextButton.disabled = currentPage === totalPages;\n      nextButton.addEventListener('click', () => {\n        if (currentPage < totalPages) {\n          currentPage++;\n          renderMovies(currentPage);\n        }\n      });\n      pagination.appendChild(nextButton);\n    }\n  };\n\n  const handleSearch = () => {\n    query = input.value.trim();\n    currentPage = 1;\n    renderMovies(currentPage);\n  };\n\n  searchButton.addEventListener('click', handleSearch);\n  yearSelect.addEventListener('change', handleSearch);\n  xButton.addEventListener('click', () => {\n    input.value = '';\n    handleSearch();\n  });\n  input.addEventListener('input', () => xButton.style.visibility = input.value.trim() ? 'visible' : 'hidden');\n\n  // Initial load\n  renderMovies(currentPage);\n});\n"],"names":["tmdb","TmdbApi","catalogCardsContainer","sorryMessage","input","searchButton","yearSelect","xButton","pagination","genreAbbreviations","currentPage","totalPages","query","fetchMovies","page","resultsPerPage","movies","e","getGenres","filterByYear","year","m","starRating","rating","fullStars","halfStar","renderMovies","genres","id","_a","g","name","releaseDate","card","openMovieInfoModal","renderPagination","createPageButton","button","prevButton","startPage","endPage","dots","nextButton","handleSearch"],"mappings":"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"}