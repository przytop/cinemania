{"version":3,"file":"catalog.js","sources":["../src/js/catalog.js"],"sourcesContent":["import TmdbApi from './tmdb-api';\nimport openMovieInfoModal from './modal-window';\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n  const tmdb = new TmdbApi();\n  const catalogCardsContainer = document.querySelector('.catalog-movie-list');\n  const sorryMessage = document.querySelector('.catalog-sorry-message');\n  const input = document.querySelector('.input-text');\n  const searchButton = document.querySelector('.catalog-button');\n  const yearSelect = document.querySelector('.year-select');\n  const xButton = document.querySelector('.x-button');\n  const pagination = document.querySelector('.pagination-container');\n  const loaderCatalog = document.getElementById('loader-catalog');\n  const genreAbbreviations = { 'Science Fiction': 'Sci-Fi' };\n  let currentPage = 1;\n  let totalPages = 1;\n  let query = '';\n\n  sorryMessage.style.display = 'none';\n\n  const fetchMovies = async (page = 1, resultsPerPage = 18) => {\n    try {\n      const movies = query\n        ? await tmdb.searchMovieTotal(query, page)\n        : await tmdb.getTrendingMoviesTotal('week', page);\n      totalPages = Math.ceil(movies.total_results / 20);\n      loaderCatalog.style.display = 'none';\n      return movies.results.slice(0, resultsPerPage);\n    } catch (e) {\n      loaderCatalog.style.display = 'none';\n      console.error('Error fetching movies:', e);\n      return [];\n    }\n  };\n\n  const fetchGenres = async () => {\n    try {\n      return await tmdb.getMovieGenres();\n    } catch (e) {\n      console.error('Error fetching genres:', e);\n      return [];\n    }\n  };\n\n  const getGenres = await fetchGenres();\n  \n  const filterByYear = (movies, year) =>\n    year\n      ? movies.filter(m => new Date(m.release_date).getFullYear() == year)\n      : movies;\n\n  const starRating = rating => {\n    const fullStars = Math.floor(rating / 2);\n    const halfStar = rating % 2 >= 1 ? 1 : 0;\n    return (\n      '<svg class=\"star full\"><use xlink:href=\"#icon-star\"></use></svg>'.repeat(\n        fullStars\n      ) +\n      (halfStar\n        ? '<svg class=\"star half\"><use xlink:href=\"#icon-star-half\"></use></svg>'\n        : '') +\n      '<svg class=\"star empty\"><use xlink:href=\"#icon-star-outline\"></use></svg>'.repeat(\n        5 - Math.ceil(rating / 2)\n      )\n    );\n  };\n\n  const renderMovies = async (page = 1) => {\n    loaderCatalog.style.display = 'block';\n    const movies = filterByYear(await fetchMovies(page), yearSelect.value);\n    catalogCardsContainer.innerHTML = '';\n    sorryMessage.style.display = movies.length ? 'none' : 'block';\n\n    movies.forEach(m => {\n      const genres = m.genre_ids\n        .slice(0, 2)\n        .map(id => getGenres.find(g => g.id === id)?.name || 'Unknown')\n        .map(name => genreAbbreviations[name] || name)\n        .join(', ');\n      const releaseDate = m.release_date\n        ? new Date(m.release_date).getFullYear()\n        : 'Unknown';\n      const rating = Math.round(m.vote_average * 10) / 10;\n\n      const card = document.createElement('li');\n      card.classList.add('card');\n      card.style.background = `url(https://image.tmdb.org/t/p/w500${m.poster_path}) center/cover`;\n      card.dataset.id = m.id;\n      card.innerHTML = `\n        <div class=\"card-content\">\n          <h2>${m.title}</h2>\n          <p>${genres} | ${releaseDate} <span class=\"stars\">${starRating(\n        rating\n      )}</span></p>\n        </div>\n      `;\n      card.addEventListener('click', () => openMovieInfoModal(m.id));\n      catalogCardsContainer.appendChild(card);\n    });\n\n    renderPagination(page);\n  };\n\n  const renderPagination = currentPage => {\n    pagination.innerHTML = '';\n\n    if (totalPages <= 1) return;\n\n    const createPageButton = page => {\n      const button = document.createElement('button');\n      button.textContent = page;\n      button.classList.add('page-number-button');\n      if (page === currentPage) {\n        button.classList.add('active');\n        button.disabled = true;\n      }\n      button.addEventListener('click', () => {\n        currentPage = page;\n        catalogCardsContainer.innerHTML = '';\n        loaderCatalog.style.display = 'block';\n        renderMovies(currentPage);\n      });\n      return button;\n    };\n\n    const firstButton = createPageButton(1);\n    const startPage = Math.max(1, currentPage - 2);\n    const endPage = Math.min(totalPages, currentPage + 2);\n\n    pagination.appendChild(firstButton);\n\n    if (currentPage > 4) {\n      const dots = document.createElement('span');\n      dots.textContent = '...';\n      pagination.appendChild(dots);\n    }\n\n    for (let page = startPage; page <= endPage; page++) {\n      if (page !== 1) {\n        // Skip page 1 because it's already added\n        pagination.appendChild(createPageButton(page));\n      }\n    }\n\n    if (endPage < totalPages) {\n      const dots = document.createElement('span');\n      dots.textContent = '...';\n      pagination.appendChild(dots);\n      pagination.appendChild(createPageButton(totalPages));\n    }\n  };\n\n  const handleSearch = () => {\n    catalogCardsContainer.innerHTML = '';\n    loaderCatalog.style.display = 'block';\n    query = input.value.trim();\n    currentPage = 1;\n    renderMovies(currentPage);\n  };\n\n  searchButton.addEventListener('click', handleSearch);\n  yearSelect.addEventListener('change', handleSearch);\n  xButton.addEventListener('click', () => {\n    input.value = '';\n    handleSearch();\n  });\n  input.addEventListener(\n    'input',\n    () => (xButton.style.visibility = input.value.trim() ? 'visible' : 'hidden')\n  );\n\n  renderMovies(currentPage);\n});\n"],"names":["tmdb","TmdbApi","catalogCardsContainer","sorryMessage","input","searchButton","yearSelect","xButton","pagination","loaderCatalog","genreAbbreviations","currentPage","totalPages","query","fetchMovies","page","resultsPerPage","movies","e","getGenres","filterByYear","year","m","starRating","rating","fullStars","halfStar","renderMovies","genres","id","_a","g","name","releaseDate","card","openMovieInfoModal","renderPagination","createPageButton","button","firstButton","startPage","endPage","dots","handleSearch"],"mappings":"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"}