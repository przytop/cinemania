{"version":3,"file":"index.js","sources":["../src/js/weekly-trends.js","../src/js/upcoming-this-month.js"],"sourcesContent":["import TmdbApi from './tmdb-api';\r\nimport openMovieInfoModal from './modal-window';\r\n\r\ndocument.addEventListener('DOMContentLoaded', async function () {\r\n  const movieCardsContainer = document.getElementById('weekly-cards');\r\n  const tmdb = new TmdbApi();\r\n  const loaderWeekly = document.getElementById('loader-weekly');\r\n\r\n  const genreAbbreviations = {\r\n    'Science Fiction': 'Sci-Fi',\r\n  };\r\n\r\n  const backdrop = document.querySelector('.backdrop');\r\n\r\n  function closeModal() {\r\n    backdrop.classList.remove('is-visible');\r\n    backdrop.classList.add('is-closed');\r\n  }\r\n\r\n  backdrop.addEventListener('click', event => {\r\n    if (event.target === backdrop) {\r\n      closeModal();\r\n    }\r\n  });\r\n \r\n  try {\r\n    const movies = await tmdb.getTrendingMovies('week');\r\n\r\n    async function displayGenres() {\r\n      const screenWidth = window.innerWidth;\r\n      let genresToShow = 2;\r\n      if (screenWidth <= 600) {\r\n        genresToShow = 1;\r\n      }\r\n\r\n      movieCardsContainer.innerHTML = '';\r\n\r\n      for (const movie of movies.slice(0, 3)) {\r\n        const card = document.createElement('div');\r\n        card.classList.add('card');\r\n\r\n        const id = movie.id;\r\n        const imageUrl = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\r\n        const title = movie.title;\r\n        const releaseDate = movie.release_date\r\n          ? new Date(movie.release_date).getFullYear()\r\n          : 'Unknown';\r\n        const rating = Math.round(movie.vote_average * 10) / 10;\r\n\r\n        const genresList = await tmdb.getMovieGenres();\r\n        const genreNames = movie.genre_ids\r\n          .slice(0, genresToShow)\r\n          .map(id => {\r\n            const genre = genresList.find(g => g.id === id);\r\n            const genreName = genre ? genre.name : 'Unknown';\r\n            return genreAbbreviations[genreName] || genreName;\r\n          })\r\n          .join(', ');\r\n\r\n        const maxStars = 5;\r\n        const fullStars = Math.floor(rating / 2);\r\n        const halfStar = rating % 2 >= 1 ? 1 : 0;\r\n        const emptyStars = maxStars - fullStars - halfStar;\r\n\r\n        const stars = [\r\n          ...Array(fullStars).fill(\r\n            '<svg class=\"star full\"><use xlink:href=\"#icon-star\"></use></svg>'\r\n          ),\r\n          ...Array(halfStar).fill(\r\n            '<svg class=\"star half\"><use xlink:href=\"#icon-star-half\"></use></svg>'\r\n          ),\r\n          ...Array(emptyStars).fill(\r\n            '<svg class=\"star empty\"><use xlink:href=\"#icon-star-outline\"></use></svg>'\r\n          ),\r\n        ].join('');\r\n\r\n        card.style.backgroundImage = `url(${imageUrl})`;\r\n        card.style.backgroundSize = 'cover';\r\n        card.style.backgroundPosition = 'center';\r\n\r\n        card.dataset.id = id;\r\n\r\n        card.innerHTML = `\r\n          <div class=\"card-content\">\r\n            <h2>${title}</h2>\r\n            <p>${genreNames} | ${releaseDate} <span class=\"stars\">${stars}</span></p>\r\n          </div>\r\n        `;\r\n\r\n        loaderWeekly.style.display = 'none';\r\n        movieCardsContainer.appendChild(card);\r\n      }\r\n\r\n      document.querySelectorAll('.card').forEach(card => {\r\n        card.addEventListener('click', () => {\r\n          const id = card.getAttribute('data-id');\r\n\r\n          if (!id) {\r\n            console.error('Movie ID is undefined');\r\n            return;\r\n          }\r\n\r\n          openMovieInfoModal(id);\r\n        });\r\n      });\r\n    }\r\n\r\n    displayGenres();\r\n    window.addEventListener('resize', displayGenres);\r\n  } catch (error) {\r\n    console.error('Error fetching data:', error);\r\n  }\r\n});\r\n","import TmdbApi from './tmdb-api.js';\nimport Library from './local-movie-manager.js';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nconst tmdb = new TmdbApi();\nconst library = new Library('myLibrary');\n\n\nasync function getUpcomingMovies() {\n  const loaderUpcoming = document.getElementById('loader-upcoming');\n  \n  try {\n    const movies = await tmdb.getUpcomingMovies();\n    const today = new Date();\n    const thisMonthMovies = movies.filter(movie => {\n      const releaseDate = new Date(movie.release_date);\n      return (\n        releaseDate.getFullYear() === today.getFullYear() &&\n        releaseDate.getMonth() === today.getMonth()\n      );\n    });\n\n    if (thisMonthMovies.length === 0) {\n      loaderUpcoming.style.display = 'none';\n      displayMessage('No upcoming movies this month.');\n    } else {\n      const randomMovie =\n        thisMonthMovies[Math.floor(Math.random() * thisMonthMovies.length)];\n      loaderUpcoming.style.display = 'none';\n      displayMovie(randomMovie);\n    }\n  } catch (error) {\n    console.error('Failed to fetch upcoming movies:', error);\n    displayMessage('Failed to fetch upcoming movies. Please try again later');\n  }\n}\n\nfunction displayMessage(message) {\n  iziToast.info({\n    title: 'Info',\n    message: message,\n  });\n}\n\nfunction displayMovie(movie) {\n  const movieContainer = document.getElementById('movie-container');\n  const imageUrl = `https://image.tmdb.org/t/p/original/${movie.backdrop_path}`;\n  const releaseDate = new Date(movie.release_date).toLocaleDateString();\n  const genres = movie.genre_ids.map(id => genreMap[id]).join(', ');\n  const popularity = movie.popularity.toFixed(1);\n\n  const html = `\n    <div class=\"upcoming-container\">\n      <div class=\"upcoming-img\">\n        <img class=\"upcoming-img\" src=\"${imageUrl}\" alt=\"${movie.title}\">\n      </div>\n      <div class=\"movie-details\">\n        <h2 class=\"movie-title\">${movie.title}</h2>\n          <div class=\"info-item\">\n            <div class=\"\">\n            <p class=\"detail-item\">Release date:<span class=\"relase-date\">${releaseDate}</span></p>\n            <p class=\"detail-item\">Vote / Votes:<span class=\"vote-count\">${movie.vote_average} / ${movie.vote_count}</span></p>\n            </div>\n            <div  class=\"\">\n            <p class=\"detail-item\">Popularity:<span class=\"popularity-value\">${popularity}</span></p>\n            <div class=\"genre-p\"><p class=\"genre-item\">Genre:<div class=\"genre-div\"><span class=\"genre\">${genres}</span></div></p>\n            </div></div>\n          </div>\n        <p class=\"about\">ABOUT</p>\n        <p class=\"overview\">${movie.overview}</p>\n        <button id=\"library-btn\" data-id=\"${movie.id}\">Add to my library</button>\n      </div>\n    </div>\n  `;\n\n  movieContainer.innerHTML = html;\n\n  const libraryBtn = document.getElementById('library-btn');\n  libraryBtn.addEventListener('click', () => toggleLibrary(movie));\n  updateLibraryButton(movie.id);\n}\n\nfunction toggleLibrary(movie) {\n  const movieId = movie.id;\n  const isInLibrary = library.getMovies().some(m => m.id === movieId);\n\n  if (isInLibrary) {\n    library.removeMovie(movieId);\n    iziToast.info({\n      title: 'Info',\n      message: 'Removed from my library',\n      backgroundColor: 'red',\n      messageSize: '13',\n      closeOnEscape: 'true',\n      closeOnClick: 'true',\n    });\n  } else {\n    library.addMovie(movie);\n    iziToast.success({\n      title: 'Success',\n      message: 'Added to my library',\n      backgroundColor: 'orange',\n      messageSize: '13',\n      closeOnEscape: 'true',\n      closeOnClick: 'true',\n    });\n  }\n\n  updateLibraryButton(movieId);\n}\n\nfunction updateLibraryButton(movieId) {\n  const isInLibrary = library.getMovies().some(m => m.id === movieId);\n  const libraryBtn = document.getElementById('library-btn');\n\n  if (isInLibrary) {\n    libraryBtn.textContent = 'Remove from my library';\n  } else {\n    libraryBtn.textContent = 'Add to my library';\n  }\n}\n\nconst genreMap = {};\ntmdb.getMovieGenres().then(genres => {\n  genres.forEach(genre => {\n    genreMap[genre.id] = genre.name;\n  });\n\n  getUpcomingMovies();\n});\n"],"names":["movieCardsContainer","tmdb","TmdbApi","loaderWeekly","genreAbbreviations","backdrop","closeModal","event","movies","displayGenres","screenWidth","genresToShow","movie","card","id","imageUrl","title","releaseDate","rating","genresList","genreNames","genre","g","genreName","maxStars","fullStars","halfStar","emptyStars","stars","openMovieInfoModal","error","library","Library","getUpcomingMovies","loaderUpcoming","today","thisMonthMovies","displayMessage","randomMovie","displayMovie","message","iziToast","movieContainer","genres","genreMap","popularity","html","toggleLibrary","updateLibraryButton","movieId","m","isInLibrary","libraryBtn"],"mappings":"4GAGA,SAAS,iBAAiB,mBAAoB,gBAAkB,CAC9D,MAAMA,EAAsB,SAAS,eAAe,cAAc,EAC5DC,EAAO,IAAIC,EACXC,EAAe,SAAS,eAAe,eAAe,EAEtDC,EAAqB,CACzB,kBAAmB,QACvB,EAEQC,EAAW,SAAS,cAAc,WAAW,EAEnD,SAASC,GAAa,CACpBD,EAAS,UAAU,OAAO,YAAY,EACtCA,EAAS,UAAU,IAAI,WAAW,CACnC,CAEDA,EAAS,iBAAiB,QAASE,GAAS,CACtCA,EAAM,SAAWF,GACnBC,GAEN,CAAG,EAED,GAAI,CACF,MAAME,EAAS,MAAMP,EAAK,kBAAkB,MAAM,EAElD,eAAeQ,GAAgB,CAC7B,MAAMC,EAAc,OAAO,WAC3B,IAAIC,EAAe,EACfD,GAAe,MACjBC,EAAe,GAGjBX,EAAoB,UAAY,GAEhC,UAAWY,KAASJ,EAAO,MAAM,EAAG,CAAC,EAAG,CACtC,MAAMK,EAAO,SAAS,cAAc,KAAK,EACzCA,EAAK,UAAU,IAAI,MAAM,EAEzB,MAAMC,EAAKF,EAAM,GACXG,EAAW,kCAAkCH,EAAM,WAAW,GAC9DI,EAAQJ,EAAM,MACdK,EAAcL,EAAM,aACtB,IAAI,KAAKA,EAAM,YAAY,EAAE,YAAa,EAC1C,UACEM,EAAS,KAAK,MAAMN,EAAM,aAAe,EAAE,EAAI,GAE/CO,EAAa,MAAMlB,EAAK,iBACxBmB,EAAaR,EAAM,UACtB,MAAM,EAAGD,CAAY,EACrB,IAAIG,GAAM,CACT,MAAMO,EAAQF,EAAW,KAAKG,GAAKA,EAAE,KAAOR,CAAE,EACxCS,EAAYF,EAAQA,EAAM,KAAO,UACvC,OAAOjB,EAAmBmB,CAAS,GAAKA,CACpD,CAAW,EACA,KAAK,IAAI,EAENC,EAAW,EACXC,EAAY,KAAK,MAAMP,EAAS,CAAC,EACjCQ,EAAWR,EAAS,GAAK,EAAI,EAAI,EACjCS,EAAaH,EAAWC,EAAYC,EAEpCE,EAAQ,CACZ,GAAG,MAAMH,CAAS,EAAE,KAClB,kEACD,EACD,GAAG,MAAMC,CAAQ,EAAE,KACjB,uEACD,EACD,GAAG,MAAMC,CAAU,EAAE,KACnB,2EACD,CACX,EAAU,KAAK,EAAE,EAETd,EAAK,MAAM,gBAAkB,OAAOE,CAAQ,IAC5CF,EAAK,MAAM,eAAiB,QAC5BA,EAAK,MAAM,mBAAqB,SAEhCA,EAAK,QAAQ,GAAKC,EAElBD,EAAK,UAAY;AAAA;AAAA,kBAEPG,CAAK;AAAA,iBACNI,CAAU,MAAMH,CAAW,wBAAwBW,CAAK;AAAA;AAAA,UAIjEzB,EAAa,MAAM,QAAU,OAC7BH,EAAoB,YAAYa,CAAI,CACrC,CAED,SAAS,iBAAiB,OAAO,EAAE,QAAQA,GAAQ,CACjDA,EAAK,iBAAiB,QAAS,IAAM,CACnC,MAAMC,EAAKD,EAAK,aAAa,SAAS,EAEtC,GAAI,CAACC,EAAI,CACP,QAAQ,MAAM,uBAAuB,EACrC,MACD,CAEDe,EAAmBf,CAAE,CAC/B,CAAS,CACT,CAAO,CACF,CAEDL,IACA,OAAO,iBAAiB,SAAUA,CAAa,CAChD,OAAQqB,EAAO,CACd,QAAQ,MAAM,uBAAwBA,CAAK,CAC5C,CACH,CAAC,EC5GD,MAAM7B,EAAO,IAAIC,EACX6B,EAAU,IAAIC,EAAQ,WAAW,EAGvC,eAAeC,GAAoB,CACjC,MAAMC,EAAiB,SAAS,eAAe,iBAAiB,EAEhE,GAAI,CACF,MAAM1B,EAAS,MAAMP,EAAK,kBAAmB,EACvCkC,EAAQ,IAAI,KACZC,EAAkB5B,EAAO,OAAOI,GAAS,CAC7C,MAAMK,EAAc,IAAI,KAAKL,EAAM,YAAY,EAC/C,OACEK,EAAY,YAAW,IAAOkB,EAAM,YAAa,GACjDlB,EAAY,aAAekB,EAAM,SAAQ,CAEjD,CAAK,EAED,GAAIC,EAAgB,SAAW,EAC7BF,EAAe,MAAM,QAAU,OAC/BG,EAAe,gCAAgC,MAC1C,CACL,MAAMC,EACJF,EAAgB,KAAK,MAAM,KAAK,SAAWA,EAAgB,MAAM,CAAC,EACpEF,EAAe,MAAM,QAAU,OAC/BK,EAAaD,CAAW,CAC9B,CACG,OAAQR,EAAO,CACd,QAAQ,MAAM,mCAAoCA,CAAK,EACvDO,EAAe,yDAAyD,CAC5E,CACA,CAEA,SAASA,EAAeG,EAAS,CAC/BC,EAAS,KAAK,CACZ,MAAO,OACP,QAASD,CACb,CAAG,CACH,CAEA,SAASD,EAAa3B,EAAO,CAC3B,MAAM8B,EAAiB,SAAS,eAAe,iBAAiB,EAC1D3B,EAAW,uCAAuCH,EAAM,aAAa,GACrEK,EAAc,IAAI,KAAKL,EAAM,YAAY,EAAE,mBAAoB,EAC/D+B,EAAS/B,EAAM,UAAU,IAAIE,GAAM8B,EAAS9B,CAAE,CAAC,EAAE,KAAK,IAAI,EAC1D+B,EAAajC,EAAM,WAAW,QAAQ,CAAC,EAEvCkC,EAAO;AAAA;AAAA;AAAA,yCAG0B/B,CAAQ,UAAUH,EAAM,KAAK;AAAA;AAAA;AAAA,kCAGpCA,EAAM,KAAK;AAAA;AAAA;AAAA,4EAG+BK,CAAW;AAAA,2EACZL,EAAM,YAAY,MAAMA,EAAM,UAAU;AAAA;AAAA;AAAA,+EAGpCiC,CAAU;AAAA,0GACiBF,CAAM;AAAA;AAAA;AAAA;AAAA,8BAIlF/B,EAAM,QAAQ;AAAA,4CACAA,EAAM,EAAE;AAAA;AAAA;AAAA,IAKlD8B,EAAe,UAAYI,EAER,SAAS,eAAe,aAAa,EAC7C,iBAAiB,QAAS,IAAMC,EAAcnC,CAAK,CAAC,EAC/DoC,EAAoBpC,EAAM,EAAE,CAC9B,CAEA,SAASmC,EAAcnC,EAAO,CAC5B,MAAMqC,EAAUrC,EAAM,GACFmB,EAAQ,UAAW,EAAC,KAAKmB,GAAKA,EAAE,KAAOD,CAAO,GAGhElB,EAAQ,YAAYkB,CAAO,EAC3BR,EAAS,KAAK,CACZ,MAAO,OACP,QAAS,0BACT,gBAAiB,MACjB,YAAa,KACb,cAAe,OACf,aAAc,MACpB,CAAK,IAEDV,EAAQ,SAASnB,CAAK,EACtB6B,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,sBACT,gBAAiB,SACjB,YAAa,KACb,cAAe,OACf,aAAc,MACpB,CAAK,GAGHO,EAAoBC,CAAO,CAC7B,CAEA,SAASD,EAAoBC,EAAS,CACpC,MAAME,EAAcpB,EAAQ,UAAW,EAAC,KAAKmB,GAAKA,EAAE,KAAOD,CAAO,EAC5DG,EAAa,SAAS,eAAe,aAAa,EAEpDD,EACFC,EAAW,YAAc,yBAEzBA,EAAW,YAAc,mBAE7B,CAEA,MAAMR,EAAW,CAAE,EACnB3C,EAAK,eAAc,EAAG,KAAK0C,GAAU,CACnCA,EAAO,QAAQtB,GAAS,CACtBuB,EAASvB,EAAM,EAAE,EAAIA,EAAM,IAC/B,CAAG,EAEDY,EAAmB,CACrB,CAAC"}