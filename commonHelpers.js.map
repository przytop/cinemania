{"version":3,"file":"commonHelpers.js","sources":["../src/js/catalog.js"],"sourcesContent":["import TmbdbApi from './tmdb-api';\nimport openMovieInfoModal from './modal-window';\n\ndocument.addEventListener('DOMContentLoaded', async function () {\n  const catalogCardsContainer = document.querySelector('.catalog-movie-list');\n  const tmdb = new TmbdbApi();\n\n  const genreAbbreviations = {\n    'Science Fiction': 'Sci-Fi',\n  };\n\n  const backdrop = document.querySelector('.backdrop');\n  // const modalWindow = backdrop.querySelector('.modal-window');\n  // const closeButton = modalWindow.querySelector('.modal-btn-close');\n\n  // function openModal() {\n  //   modalWindow.innerHTML = `\n  //   <button class=\"modal-btn-close\" type=\"button\">\n  //     <svg class=\"modal-btn-close-icon\" width=\"10.5\" height=\"10.5\" fill=\"#ffffff\">\n  //       <use href=\"\"></use>\n  //     </svg>\n  //   </button>\n\n  //   <img class=\"modal-film-poster\" src=\"https://via.placeholder.com/248x315\" alt=\"Film Poster\">\n\n  //   <div class=\"modal-film-infos\">\n  //       <h3 class=\"modal-film-title\">Sample Film Title</h3>\n  //       <table class=\"modal-film-stats\">\n  //           <tr class=\"modal-film-tab-row\">\n  //               <th class=\"modal-film-tab-header\">Vote / Votes</th>\n  //               <td class=\"modal-film-tab-data\">\n  //                   <span class=\"modal-window-accent-vote\">8.5</span>\n  //                   /\n  //                   <span class=\"modal-window-accent-votes\">2000</span></td>\n  //           </tr>\n  //           <tr class=\"modal-film-tab-row\">\n  //               <th class=\"modal-film-tab-header\">Popularity</th>\n  //               <td class=\"modal-film-tab-data\">89.2</td>\n  //           </tr>\n  //           <tr class=\"modal-film-tab-row\">\n  //               <th class=\"modal-film-tab-header\">Genre</th>\n  //               <td class=\"modal-film-tab-data\">Action, Drama</td>\n  //           </tr>\n  //       </table>\n\n  //       <h3 class=\"modal-film-desc-about\">About</h3>\n  //       <p class=\"modal-film-desc\">Sample description  ~~ Lorem ipsum, dolor sit amet consectetur adipisicing elit. Quo commodi\n  //             iure eius repellendus perspiciatis. Ducimus sit temporibus provident architecto! Adipisci labore\n  //             accusantium maiores, laborum voluptates odit illum odio nam id. Lorem ipsum dolor sit amet consectetur\n  //             adipisicing elit. Rem fugiat ea, eos provident, illo veritatis quos id laborum a, enim ullam. Provident\n  //             atque id quam, aspernatur nemo necessitatibus saepe consequatur. Lorem ipsum dolor sit amet consectetur\n  //             adipisicing elit. Consequuntur asperiores cumque, debitis atque ab maiores beatae voluptatum aperiam\n  //             error nulla? Nostrum aperiam magni aut magnam ipsam maiores quaerat placeat omnis</p>\n  //       <button id=\"library-actions-btn\" type=\"submit\">Add to my library</button>\n  //   </div>\n  // `;\n  //   backdrop.classList.remove('is-closed');\n  //   backdrop.classList.add('is-visible');\n  // }\n\n  function closeModal() {\n    backdrop.classList.remove('is-visible');\n    backdrop.classList.add('is-closed');\n  }\n\n  // closeButton.addEventListener('click', closeModal);\n\n  backdrop.addEventListener('click', event => {\n    if (event.target === backdrop) {\n      closeModal();\n    }\n  });\n\n  try {\n    const movies = await tmdb.getTrendingMovies('day');\n\n    function displayGenres() {\n      const screenWidth = window.innerWidth;\n      let genresToShow = 2;\n\n      if (screenWidth <= 600) {\n        genresToShow = 1;\n      }\n\n      catalogCardsContainer.innerHTML = '';\n\n      movies.slice(0, 9).forEach(async movie => {\n        const card = document.createElement('div');\n        card.classList.add('card');\n\n        const id = movie.id;\n\n        const imageUrl = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n        const title = movie.title;\n        const releaseDate = movie.release_date\n          ? new Date(movie.release_date).getFullYear()\n          : 'Unknown';\n        const rating = Math.round(movie.vote_average * 10) / 10;\n\n        const genresList = await tmdb.getMovieGenres();\n        const genreNames = movie.genre_ids\n          .slice(0, genresToShow)\n          .map(id => {\n            const genre = genresList.find(g => g.id === id);\n            const genreName = genre ? genre.name : 'Unknown';\n            return genreAbbreviations[genreName] || genreName;\n          })\n          .join(', ');\n\n        const maxStars = 5;\n        const fullStars = Math.floor(rating / 2);\n        const halfStar = rating % 2 >= 1 ? 1 : 0;\n        const emptyStars = maxStars - fullStars - halfStar;\n\n        const stars = [\n          ...Array(fullStars).fill(\n            '<svg class=\"star full\"><use xlink:href=\"#icon-star\"></use></svg>'\n          ),\n          ...Array(halfStar).fill(\n            '<svg class=\"star half\"><use xlink:href=\"#icon-star-half\"></use></svg>'\n          ),\n          ...Array(emptyStars).fill(\n            '<svg class=\"star empty\"><use xlink:href=\"#icon-star-outline\"></use></svg>'\n          ),\n        ].join('');\n\n        card.style.backgroundImage = `url(${imageUrl})`;\n        card.style.backgroundSize = 'cover';\n        card.style.backgroundPosition = 'center';\n\n        card.dataset.id = id;\n\n        card.innerHTML = `\n        <div class=\"card-content\">\n          <h2>${title}</h2>\n          <p>${genreNames} | ${releaseDate} <span class=\"stars\">${stars}</span></p>\n        </div>\n      `;\n\n      document.querySelectorAll('.card').forEach(card => {\n          card.addEventListener('click', event => {\n            const id = event.target.getAttribute('data-id');\n            if (id) {\n              // Ensure the id is present\n              openMovieInfoModal(id);\n            }\n          });\n        });\n\n        catalogCardsContainer.appendChild(card);\n      });\n    }\n\n    displayGenres();\n\n    window.addEventListener('resize', displayGenres);\n  } catch (error) {\n    console.error('Error fetching data:', error);\n  }\n});\n\nconst test = async () => {\n  try {\n    console.log(await tmdb.getTrendingMovies('day'));\n    console.log(await tmdb.getTrendingMovies('week'));\n    console.log(await tmdb.searchMovie('Dune'));\n    console.log(await tmdb.getMovieDetails(438631, 'title'));\n    console.log(await tmdb.getMovieVideos(438631));\n  } catch (error) {\n    console.error('Test failed:', error);\n  }\n};\n\nconst search = async text => {\n  try {\n    const result = await tmdb.searchMovie(text);\n    console.log(result);\n    return result;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// const trending = tmdb.getTrendingMovies('week').then(result => {\n//   console.log(result);\n//   return result;\n// });\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const input = document.querySelector('.input-text');\n  const sorryMessage = document.querySelector('.catalog-sorry-message');\n  const movieListItems = document.querySelectorAll('.catalog-movie-list-item');\n\n  // sorryMessage.style.display = 'none'; // Ukryj wiadomość na początku\n\n  // input.addEventListener('input', function () {\n  //   const query = input.value.toLowerCase();\n  //   let hasResults = false;\n\n  //   movieListItems.forEach(item => {\n  //     const title = item\n  //       .querySelector('.catalog-movie-title')\n  //       .textContent.toLowerCase();\n  //     if (title.includes(query)) {\n  //       item.style.display = ''; // Pokaż element\n  //       hasResults = true;\n  //     } else {\n  //       item.style.display = 'none'; // Ukryj element\n  //     }\n  //   });\n\n  //   if (!hasResults) {\n  //     sorryMessage.style.display = 'block'; // Pokaż wiadomość\n  //   } else {\n  //     sorryMessage.style.display = 'none'; // Ukryj wiadomość\n  //   }\n  // });\n});\n\n\n// ___________________________\n\n"],"names":["catalogCardsContainer","tmdb","TmbdbApi","genreAbbreviations","backdrop","closeModal","event","displayGenres","screenWidth","genresToShow","movies","movie","card","id","imageUrl","title","releaseDate","rating","genresList","genreNames","genre","g","genreName","maxStars","fullStars","halfStar","emptyStars","stars","openMovieInfoModal","error"],"mappings":"yFAGA,SAAS,iBAAiB,mBAAoB,gBAAkB,CAC9D,MAAMA,EAAwB,SAAS,cAAc,qBAAqB,EACpEC,EAAO,IAAIC,EAEXC,EAAqB,CACzB,kBAAmB,QACvB,EAEQC,EAAW,SAAS,cAAc,WAAW,EAiDnD,SAASC,GAAa,CACpBD,EAAS,UAAU,OAAO,YAAY,EACtCA,EAAS,UAAU,IAAI,WAAW,CACnC,CAIDA,EAAS,iBAAiB,QAASE,GAAS,CACtCA,EAAM,SAAWF,GACnBC,GAEN,CAAG,EAED,GAAI,CAGF,IAASE,EAAT,UAAyB,CACvB,MAAMC,EAAc,OAAO,WAC3B,IAAIC,EAAe,EAEfD,GAAe,MACjBC,EAAe,GAGjBT,EAAsB,UAAY,GAElCU,EAAO,MAAM,EAAG,CAAC,EAAE,QAAQ,MAAMC,GAAS,CACxC,MAAMC,EAAO,SAAS,cAAc,KAAK,EACzCA,EAAK,UAAU,IAAI,MAAM,EAEzB,MAAMC,EAAKF,EAAM,GAEXG,EAAW,kCAAkCH,EAAM,WAAW,GAC9DI,EAAQJ,EAAM,MACdK,EAAcL,EAAM,aACtB,IAAI,KAAKA,EAAM,YAAY,EAAE,YAAa,EAC1C,UACEM,EAAS,KAAK,MAAMN,EAAM,aAAe,EAAE,EAAI,GAE/CO,EAAa,MAAMjB,EAAK,iBACxBkB,EAAaR,EAAM,UACtB,MAAM,EAAGF,CAAY,EACrB,IAAII,GAAM,CACT,MAAMO,EAAQF,EAAW,KAAKG,GAAKA,EAAE,KAAOR,CAAE,EACxCS,EAAYF,EAAQA,EAAM,KAAO,UACvC,OAAOjB,EAAmBmB,CAAS,GAAKA,CACpD,CAAW,EACA,KAAK,IAAI,EAENC,EAAW,EACXC,EAAY,KAAK,MAAMP,EAAS,CAAC,EACjCQ,EAAWR,EAAS,GAAK,EAAI,EAAI,EACjCS,EAAaH,EAAWC,EAAYC,EAEpCE,EAAQ,CACZ,GAAG,MAAMH,CAAS,EAAE,KAClB,kEACD,EACD,GAAG,MAAMC,CAAQ,EAAE,KACjB,uEACD,EACD,GAAG,MAAMC,CAAU,EAAE,KACnB,2EACD,CACX,EAAU,KAAK,EAAE,EAETd,EAAK,MAAM,gBAAkB,OAAOE,CAAQ,IAC5CF,EAAK,MAAM,eAAiB,QAC5BA,EAAK,MAAM,mBAAqB,SAEhCA,EAAK,QAAQ,GAAKC,EAElBD,EAAK,UAAY;AAAA;AAAA,gBAETG,CAAK;AAAA,eACNI,CAAU,MAAMH,CAAW,wBAAwBW,CAAK;AAAA;AAAA,QAIjE,SAAS,iBAAiB,OAAO,EAAE,QAAQf,GAAQ,CAC/CA,EAAK,iBAAiB,QAASN,GAAS,CACtC,MAAMO,EAAKP,EAAM,OAAO,aAAa,SAAS,EAC1CO,GAEFe,EAAmBf,CAAE,CAEnC,CAAW,CACX,CAAS,EAEDb,EAAsB,YAAYY,CAAI,CAC9C,CAAO,CACF,EA7ED,MAAMF,EAAS,MAAMT,EAAK,kBAAkB,KAAK,EA+EjDM,IAEA,OAAO,iBAAiB,SAAUA,CAAa,CAChD,OAAQsB,EAAO,CACd,QAAQ,MAAM,uBAAwBA,CAAK,CAC5C,CACH,CAAC,EA6BD,SAAS,iBAAiB,mBAAoB,UAAY,CAC1C,SAAS,cAAc,aAAa,EAC7B,SAAS,cAAc,wBAAwB,EAC7C,SAAS,iBAAiB,0BAA0B,CA0B7E,CAAC"}